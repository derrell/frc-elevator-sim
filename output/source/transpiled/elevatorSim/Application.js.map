{
  "version": 3,
  "sources": [
    "/home/derrell/ME/FRC/frc-elevator-sim.git/source/class/elevatorSim/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "enabledPeriodicInterval",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "_win",
    "_code",
    "_blockly",
    "_enabled",
    "_butExport",
    "_butImport",
    "_butShowLog",
    "main",
    "doc",
    "hBox",
    "font",
    "label",
    "sheet",
    "style",
    "styles",
    "appender",
    "container",
    "scriptLoader",
    "elevatorCanvas",
    "log",
    "Native",
    "Console",
    "Logger",
    "setLevel",
    "show",
    "toggle",
    "document",
    "getElementsByTagName",
    "length",
    "bom",
    "Stylesheet",
    "removeRule",
    "addRule",
    "getRoot",
    "ui",
    "basic",
    "Label",
    "Font",
    "set",
    "size",
    "bold",
    "family",
    "setFont",
    "add",
    "top",
    "left",
    "Composite",
    "layout",
    "HBox",
    "right",
    "form",
    "Button",
    "addListener",
    "copyToClipboard",
    "str",
    "el",
    "createElement",
    "value",
    "setAttribute",
    "position",
    "body",
    "appendChild",
    "select",
    "execCommand",
    "removeChild",
    "window",
    "alert",
    "_import",
    "core",
    "Spacer",
    "CheckBox",
    "e",
    "elevator",
    "elevatorSim",
    "Elevator",
    "getInstance",
    "getWindow",
    "postMessage",
    "type",
    "name",
    "getData",
    "setEnabled",
    "clearInterval",
    "setVelocity",
    "edge",
    "addEventListener",
    "event",
    "code",
    "data",
    "join",
    "eval",
    "setValue",
    "info",
    "embed",
    "Iframe",
    "flex",
    "hide",
    "textArea",
    "butImport",
    "butCancel",
    "Window",
    "setPadding",
    "setLayout",
    "VBox",
    "removeAll",
    "TextArea",
    "width",
    "height",
    "confirm",
    "getValue",
    "close",
    "center",
    "open",
    "showError",
    "message",
    "Application"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAIC,uBAAJ,C,CAA8B;;AAE9BJ,EAAAA,EAAE,CAACK,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGP,EAAE,CAACQ,WAAH,CAAeC,UAD1B;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,IAAI,EAAU,IADhB;AAEEC,MAAAA,KAAK,EAAS,IAFhB;AAGEC,MAAAA,QAAQ,EAAM,IAHhB;AAIEC,MAAAA,QAAQ,EAAM,IAJhB;AAKEC,MAAAA,UAAU,EAAI,IALhB;AAMEC,MAAAA,UAAU,EAAI,IANhB;AAOEC,MAAAA,WAAW,EAAG,IAPhB;AASEC,MAAAA,IAAI,EAAG,gBACP;AAAA;;AACE,YAAgBC,GAAhB;AACA,YAAgBC,IAAhB;AACA,YAAgBC,IAAhB;AACA,YAAgBC,KAAhB;AACA,YAAgBC,KAAhB;AACA,YAAgBC,KAAhB;AACA,YAAgBC,MAAhB;AACA,YAAgBC,QAAhB;AACA,YAAgBC,SAAhB;AACA,YAAgBC,YAAhB;AACA,YAAgBC,cAAhB;AAEA;AAEAH,QAAAA,QAAQ,GAAG1B,EAAE,CAAC8B,GAAH,CAAOJ,QAAP,CAAgBK,MAA3B;AACAL,QAAAA,QAAQ,GAAG1B,EAAE,CAAC8B,GAAH,CAAOJ,QAAP,CAAgBM,OAA3B,CAhBF,CAgBsC;;AACpChC,QAAAA,EAAE,CAAC8B,GAAH,CAAOG,MAAP,CAAcC,QAAd,CAAuB,MAAvB,EAjBF,CAmBE;;AACAR,QAAAA,QAAQ,CAACS,IAAT;AACAT,QAAAA,QAAQ,CAACU,MAAT,GArBF,CAuBE;AACA;AACA;;AACAX,QAAAA,MAAM,GAAGY,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,CAAT,CA1BF,CA4BE;;AACAd,QAAAA,KAAK,GAAGC,MAAM,CAACA,MAAM,CAACc,MAAP,GAAgB,CAAjB,CAAd,CA7BF,CA+BE;;AACAhB,QAAAA,KAAK,GAAGC,KAAK,CAACD,KAAd,CAhCF,CAkCE;;AACAvB,QAAAA,EAAE,CAACwC,GAAH,CAAOC,UAAP,CAAkBC,UAAlB,CAA6BnB,KAA7B,EAAoC,YAApC,EAnCF,CAqCE;;AACAvB,QAAAA,EAAE,CAACwC,GAAH,CAAOC,UAAP,CAAkBE,OAAlB,CACEpB,KADF,EAEE,YAFF,EAGE,uOAHF,EAtCF,CA2CE;;AACAJ,QAAAA,GAAG,GAAG,KAAKyB,OAAL,EAAN,CA5CF,CA8CE;;AACAtB,QAAAA,KAAK,GAAG,IAAItB,EAAE,CAAC6C,EAAH,CAAMC,KAAN,CAAYC,KAAhB,CAAsB,8BAAtB,CAAR;AACA1B,QAAAA,IAAI,GAAG,IAAIrB,EAAE,CAACwC,GAAH,CAAOQ,IAAX,EAAP;AACA3B,QAAAA,IAAI,CAAC4B,GAAL,CACE;AACEC,UAAAA,IAAI,EAAK,EADX;AAEEC,UAAAA,IAAI,EAAK,IAFX;AAGEC,UAAAA,MAAM,EAAG,CAAE,YAAF;AAHX,SADF;AAMA9B,QAAAA,KAAK,CAAC+B,OAAN,CAAchC,IAAd;AACAF,QAAAA,GAAG,CAACmC,GAAJ,CAAQhC,KAAR,EAAe;AAAEiC,UAAAA,GAAG,EAAG,EAAR;AAAYC,UAAAA,IAAI,EAAG;AAAnB,SAAf,EAxDF,CA0DE;;AACApC,QAAAA,IAAI,GAAG,IAAIpB,EAAE,CAAC6C,EAAH,CAAMlB,SAAN,CAAgB8B,SAApB,CAA8B,IAAIzD,EAAE,CAAC6C,EAAH,CAAMa,MAAN,CAAaC,IAAjB,CAAsB,EAAtB,CAA9B,CAAP;AACAxC,QAAAA,GAAG,CAACmC,GAAJ,CAAQlC,IAAR,EAAc;AAAEmC,UAAAA,GAAG,EAAG,EAAR;AAAYK,UAAAA,KAAK,EAAG;AAApB,SAAd;AAEA,aAAK7C,UAAL,GAAkB,IAAIf,EAAE,CAAC6C,EAAH,CAAMgB,IAAN,CAAWC,MAAf,CAAsB,QAAtB,CAAlB;AACA1C,QAAAA,IAAI,CAACkC,GAAL,CAAS,KAAKvC,UAAd;;AACA,aAAKA,UAAL,CAAgBgD,WAAhB,CACE,SADF,EAEE,YACA;AACE,cAAMC,eAAe,GACnB,SADIA,eACJ,CAAAC,GAAG,EACD;AACE,gBAAMC,EAAE,GAAG7B,QAAQ,CAAC8B,aAAT,CAAuB,UAAvB,CAAX;AACAD,YAAAA,EAAE,CAACE,KAAH,GAAWH,GAAX;AACAC,YAAAA,EAAE,CAACG,YAAH,CAAgB,UAAhB,EAA4B,EAA5B;AACAH,YAAAA,EAAE,CAAC1C,KAAH,CAAS8C,QAAT,GAAoB,UAApB;AACAJ,YAAAA,EAAE,CAAC1C,KAAH,CAASgC,IAAT,GAAgB,SAAhB;AACAnB,YAAAA,QAAQ,CAACkC,IAAT,CAAcC,WAAd,CAA0BN,EAA1B;AACAA,YAAAA,EAAE,CAACO,MAAH;AACApC,YAAAA,QAAQ,CAACqC,WAAT,CAAqB,MAArB;AACArC,YAAAA,QAAQ,CAACkC,IAAT,CAAcI,WAAd,CAA0BT,EAA1B;AACD,WAZL;;AAaAF,UAAAA,eAAe,CAAC,KAAI,CAACpD,KAAN,CAAf;AACAgE,UAAAA,MAAM,CAACC,KAAP;AAGD,SArBH;;AAuBA,aAAK7D,UAAL,GAAkB,IAAIhB,EAAE,CAAC6C,EAAH,CAAMgB,IAAN,CAAWC,MAAf,CAAsB,QAAtB,CAAlB;AACA1C,QAAAA,IAAI,CAACkC,GAAL,CAAS,KAAKtC,UAAd;;AACA,aAAKA,UAAL,CAAgB+C,WAAhB,CAA4B,SAA5B,EAAuC,KAAKe,OAA5C,EAAqD,IAArD,EAzFF,CA2FE;;;AACA1D,QAAAA,IAAI,CAACkC,GAAL,CAAS,IAAItD,EAAE,CAAC6C,EAAH,CAAMkC,IAAN,CAAWC,MAAf,CAAsB,EAAtB,EAA0B,CAA1B,CAAT;AAEA,aAAK/D,WAAL,GAAmB,IAAIjB,EAAE,CAAC6C,EAAH,CAAMgB,IAAN,CAAWC,MAAf,CAAsB,KAAtB,CAAnB;AACA1C,QAAAA,IAAI,CAACkC,GAAL,CAAS,KAAKrC,WAAd;;AACA,aAAKA,WAAL,CAAiB8C,WAAjB,CACE,SADF,EAEE,YACA;AACErC,UAAAA,QAAQ,CAACU,MAAT;AACD,SALH,EAhGF,CAuGE;;;AACA,aAAKtB,QAAL,GAAgB,IAAId,EAAE,CAAC6C,EAAH,CAAMgB,IAAN,CAAWoB,QAAf,CAAwB,SAAxB,CAAhB;;AACA,aAAKnE,QAAL,CAAciD,WAAd,CACE,aADF,EAEE,UAACmB,CAAD,EACA;AACE,cAAgBC,QAAQ,GAAGC,WAAW,CAACC,QAAZ,CAAqBC,WAArB,EAA3B;;AAEA,UAAA,KAAI,CAACzE,QAAL,CAAc0E,SAAd,GAA0BC,WAA1B,CACE;AACEC,YAAAA,IAAI,EAAI,SADV;AAEEC,YAAAA,IAAI,EAAI,SAFV;AAGEtB,YAAAA,KAAK,EAAGc,CAAC,CAACS,OAAF;AAHV,WADF,EAME,GANF,EAHF,CAWE;;;AACAR,UAAAA,QAAQ,CAACS,UAAT,CAAoBV,CAAC,CAACS,OAAF,EAApB;;AAEA,cAAI,CAAET,CAAC,CAACS,OAAF,EAAN,EACA;AACEE,YAAAA,aAAa,CAACzF,uBAAD,CAAb;AACA+E,YAAAA,QAAQ,CAACW,WAAT,CAAqB,CAArB;AACD;AACF,SAtBH;;AAuBA3E,QAAAA,GAAG,CAACmC,GAAJ,CAAQ,KAAKxC,QAAb,EAAuB;AAAEyC,UAAAA,GAAG,EAAG,EAAR;AAAYK,UAAAA,KAAK,EAAG;AAApB,SAAvB,EAhIF,CAkIE;;AACAjC,QAAAA,SAAS,GAAG,IAAI3B,EAAE,CAAC6C,EAAH,CAAMlB,SAAN,CAAgB8B,SAApB,CAA8B,IAAIzD,EAAE,CAAC6C,EAAH,CAAMa,MAAN,CAAaC,IAAjB,CAAsB,EAAtB,CAA9B,CAAZ;AACAxC,QAAAA,GAAG,CAACmC,GAAJ,CAAQ3B,SAAR,EAAmB;AAAEoE,UAAAA,IAAI,EAAG,EAAT;AAAaxC,UAAAA,GAAG,EAAG;AAAnB,SAAnB,EApIF,CAsIE;;AACAqB,QAAAA,MAAM,CAACoB,gBAAP,CACE,SADF,EAEE,UAACC,KAAD,EACA;AACE,cAAgBC,IAAhB;;AAEA,kBAAOD,KAAK,CAACE,IAAN,CAAWV,IAAlB;AAEA,iBAAK,SAAL;AACE,sBAAOQ,KAAK,CAACE,IAAN,CAAWT,IAAlB;AAEA,qBAAK,KAAL;AACEQ,kBAAAA,IAAI,GACF,CACE,kBADF,EAEE,8CAFF,EAGE,iBAHF,EAIED,KAAK,CAACE,IAAN,CAAW/B,KAJb,EAKE,6DALF,EAMEgC,IANF,CAMO,IANP,CADF;AAQAC,kBAAAA,IAAI,CAACH,IAAD,CAAJ;AACA;;AAEF,qBAAK,YAAL;AACE,kBAAA,KAAI,CAACpF,QAAL,CAAcwF,QAAd,CAAuBL,KAAK,CAACE,IAAN,CAAW/B,KAAlC;;AACA;;AAEF,qBAAK,SAAL;AACE,kBAAA,KAAI,CAACxD,KAAL,GAAaqF,KAAK,CAACE,IAAN,CAAW/B,KAAxB;AACA;;AAEF,qBAAK,KAAL;AACEpE,kBAAAA,EAAE,CAAC8B,GAAH,CAAOG,MAAP,CAAcsE,IAAd,CAAmBN,KAAK,CAACE,IAAN,CAAW/B,KAA9B;AACA;AAxBF;;AA0BA;AA7BF;AA+BD,SArCH,EAvIF,CA8KE;;AACA,aAAKvD,QAAL,GAAgB,IAAIb,EAAE,CAAC6C,EAAH,CAAM2D,KAAN,CAAYC,MAAhB,CAAuB,8BAAvB,CAAhB;AACA9E,QAAAA,SAAS,CAAC2B,GAAV,CAAc,KAAKzC,QAAnB,EAA6B;AAAE6F,UAAAA,IAAI,EAAG;AAAT,SAA7B,EAhLF,CAkLE;;AACA7E,QAAAA,cAAc,GAAGuD,WAAW,CAACC,QAAZ,CAAqBC,WAArB,EAAjB;AACA3D,QAAAA,SAAS,CAAC2B,GAAV,CAAczB,cAAd,EApLF,CAsLE;;AACAA,QAAAA,cAAc,CAAC8E,IAAf,GAvLF,CAyLE;;AACA,aAAK/F,KAAL,GAAa,EAAb;AACD,OArMH;;AAuME;AACJ;AACA;AACA;AACIkE,MAAAA,OAAO,EAAG,mBACV;AAAA;;AACE,YAAgB1D,IAAhB;AACA,YAAgBE,KAAhB;AACA,YAAgBsF,QAAhB;AACA,YAAgBC,SAAhB;AACA,YAAgBC,SAAhB;;AAEA,YAAI,CAAE,KAAKnG,IAAX,EACA;AACE,eAAKA,IAAL,GAAY,IAAIX,EAAE,CAAC6C,EAAH,CAAM+B,MAAN,CAAamC,MAAjB,CAAwB,QAAxB,CAAZ;;AACA,eAAKpG,IAAL,CAAUqG,UAAV,CAAqB,EAArB;;AACA,eAAKrG,IAAL,CAAUsG,SAAV,CAAoB,IAAIjH,EAAE,CAAC6C,EAAH,CAAMa,MAAN,CAAawD,IAAjB,CAAsB,EAAtB,CAApB;AACD,SAZH,CAcE;;;AACA,aAAKvG,IAAL,CAAUwG,SAAV,GAfF,CAiBE;;;AACA7F,QAAAA,KAAK,GAAG,IAAItB,EAAE,CAAC6C,EAAH,CAAMC,KAAN,CAAYC,KAAhB,CACN,yDADM,CAAR;;AAEA,aAAKpC,IAAL,CAAU2C,GAAV,CAAchC,KAAd;;AAEAsF,QAAAA,QAAQ,GAAG,IAAI5G,EAAE,CAAC6C,EAAH,CAAMgB,IAAN,CAAWuD,QAAf,CAAwB,EAAxB,CAAX;AACAR,QAAAA,QAAQ,CAAC3D,GAAT,CACE;AACEoE,UAAAA,KAAK,EAAI,GADX;AAEEC,UAAAA,MAAM,EAAG;AAFX,SADF;;AAKA,aAAK3G,IAAL,CAAU2C,GAAV,CAAcsD,QAAd;;AAEAxF,QAAAA,IAAI,GAAG,IAAIpB,EAAE,CAAC6C,EAAH,CAAMlB,SAAN,CAAgB8B,SAApB,CAA8B,IAAIzD,EAAE,CAAC6C,EAAH,CAAMa,MAAN,CAAaC,IAAjB,CAAsB,EAAtB,CAA9B,CAAP;;AACA,aAAKhD,IAAL,CAAU2C,GAAV,CAAclC,IAAd,EA/BF,CAiCE;;;AACAA,QAAAA,IAAI,CAACkC,GAAL,CAAS,IAAItD,EAAE,CAAC6C,EAAH,CAAMkC,IAAN,CAAWC,MAAf,EAAT,EAAkC;AAAE0B,UAAAA,IAAI,EAAG;AAAT,SAAlC,EAlCF,CAoCE;;AACAG,QAAAA,SAAS,GAAG,IAAI7G,EAAE,CAAC6C,EAAH,CAAMgB,IAAN,CAAWC,MAAf,CAAsB,QAAtB,CAAZ;AACA1C,QAAAA,IAAI,CAACkC,GAAL,CAASuD,SAAT;AACAA,QAAAA,SAAS,CAAC9C,WAAV,CACE,SADF,EAEE,YACA;AACE,cAAIa,MAAM,CAAC2C,OAAP,+FAAJ,EAGA;AACE,YAAA,MAAI,CAAC1G,QAAL,CAAc0E,SAAd,GAA0BC,WAA1B,CACE;AACEC,cAAAA,IAAI,EAAI,SADV;AAEEC,cAAAA,IAAI,EAAI,MAFV;AAGEtB,cAAAA,KAAK,EAAGwC,QAAQ,CAACY,QAAT;AAHV,aADF,EAME,GANF;AAOD;;AAED,UAAA,MAAI,CAAC7G,IAAL,CAAU8G,KAAV;AACD,SAlBH,EAvCF,CA2DE;;AACAX,QAAAA,SAAS,GAAG,IAAI9G,EAAE,CAAC6C,EAAH,CAAMgB,IAAN,CAAWC,MAAf,CAAsB,QAAtB,CAAZ;AACA1C,QAAAA,IAAI,CAACkC,GAAL,CAASwD,SAAT;AACAA,QAAAA,SAAS,CAAC/C,WAAV,CACE,SADF,EAEE,YACA;AACE,UAAA,MAAI,CAACpD,IAAL,CAAU8G,KAAV;AACD,SALH,EA9DF,CAqEE;;AACArG,QAAAA,IAAI,CAACkC,GAAL,CAAS,IAAItD,EAAE,CAAC6C,EAAH,CAAMkC,IAAN,CAAWC,MAAf,EAAT,EAAkC;AAAE0B,UAAAA,IAAI,EAAG;AAAT,SAAlC;;AAGA,aAAK/F,IAAL,CAAU+G,MAAV;;AACA,aAAK/G,IAAL,CAAUgH,IAAV;AACD,OAvRH;;AAyRE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,SAAS,EAAG,mBAASC,OAAT,EACZ;AACE;AACA,aAAK/G,QAAL,CAAcwF,QAAd,CAAuB,KAAvB,EAFF,CAIE;;;AACAzB,QAAAA,KAAK,CAACgD,OAAO,GAAG,uBAAX,CAAL;AACD;AAxSH;AAJF,GADA;AAhBAzC,EAAAA,WAAW,CAAC0C,WAAZ,CAAwB3H,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/*\n * Copyright: 2021 Derrell Lipman\n *\n * License: MIT license\n *\n * Authors: Derrell Lipman (derrell) derrell.lipman@unwireduniverse.com\n */\n\n\n/**\n * @asset(elevatorSim/*)\n * @asset(devEnv/*)\n * @ignore Blockly\n */\nvar enabledPeriodicInterval;  // global to allow eval()'ed code to use\n\nqx.Class.define(\"elevatorSim.Application\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    _win        : null,\n    _code       : null,\n    _blockly    : null,\n    _enabled    : null,\n    _butExport  : null,\n    _butImport  : null,\n    _butShowLog : null,\n\n    main : function()\n    {\n      let             doc;\n      let             hBox;\n      let             font;\n      let             label;\n      let             sheet;\n      let             style;\n      let             styles;\n      let             appender;\n      let             container;\n      let             scriptLoader;\n      let             elevatorCanvas;\n\n      this.base(arguments);\n\n      appender = qx.log.appender.Native;\n      appender = qx.log.appender.Console; // this one must be last; used below\n      qx.log.Logger.setLevel(\"info\");\n\n      // Show and then hide the console, so its styles get created\n      appender.show();\n      appender.toggle();\n\n      // We need to fix up where the Console is displayed. Since the\n      // Console code doesn't store the style element it creates,\n      // we'll need to locate it.\n      styles = document.getElementsByTagName(\"style\");\n\n      // The style we care about was just added, so is the last one in the list\n      style = styles[styles.length - 1];\n\n      // Get its sheet object\n      sheet = style.sheet;\n\n      // Delete the rule that places the console\n      qx.bom.Stylesheet.removeRule(sheet, \".qxconsole\");\n\n      // Recreate that rule\n      qx.bom.Stylesheet.addRule(\n        sheet,\n        \".qxconsole\",\n        \"z-index:10000;width:600px;height:300px;bottom:0px;left:0px;position:absolute;border-right:1px solid black;color:black;border-bottom:1px solid black;color:black;font-family:Consolas,Monaco,monospace;font-size:11px;line-height:1.2;\");\n\n      // Get the top-level document root where we'll place all widgets\n      doc = this.getRoot();\n\n      // Add the title\n      label = new qx.ui.basic.Label(\"Elevator Subsystem Simulator\");\n      font = new qx.bom.Font();\n      font.set(\n        {\n          size   : 20,\n          bold   : true,\n          family : [ \"sans-serif\" ]\n        });\n      label.setFont(font);\n      doc.add(label, { top : 30, left : 10 });\n\n      // Create the buttons\n      hBox = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      doc.add(hBox, { top : 26, right : 450 });\n\n      this._butExport = new qx.ui.form.Button(\"Export\");\n      hBox.add(this._butExport);\n      this._butExport.addListener(\n        \"execute\",\n        () =>\n        {\n          const copyToClipboard =\n            str =>\n              {\n                const el = document.createElement('textarea');\n                el.value = str;\n                el.setAttribute('readonly', '');\n                el.style.position = 'absolute';\n                el.style.left = '-9999px';\n                document.body.appendChild(el);\n                el.select();\n                document.execCommand('copy');\n                document.body.removeChild(el);\n              };\n          copyToClipboard(this._code);\n          window.alert(\n            \"The code is now in your clipboard. \" +\n              \"Save it someplace, and later you can Import it.\");\n        });\n\n      this._butImport = new qx.ui.form.Button(\"Import\");\n      hBox.add(this._butImport);\n      this._butImport.addListener(\"execute\", this._import, this);\n\n      // Add a spacer before the log button\n      hBox.add(new qx.ui.core.Spacer(40, 1));\n\n      this._butShowLog = new qx.ui.form.Button(\"Log\");\n      hBox.add(this._butShowLog);\n      this._butShowLog.addListener(\n        \"execute\",\n        () =>\n        {\n          appender.toggle();\n        });\n\n      // Create the Enabled checkbox\n      this._enabled = new qx.ui.form.CheckBox(\"Enabled\");\n      this._enabled.addListener(\n        \"changeValue\",\n        (e) =>\n        {\n          let             elevator = elevatorSim.Elevator.getInstance();\n\n          this._blockly.getWindow().postMessage(\n            {\n              type  : \"control\",\n              name  : \"enabled\",\n              value : e.getData()\n            },\n            \"*\");\n\n          // Enable or disable the elevator\n          elevator.setEnabled(e.getData());\n\n          if (! e.getData())\n          {\n            clearInterval(enabledPeriodicInterval);\n            elevator.setVelocity(0);\n          }\n        });\n      doc.add(this._enabled, { top : 30, right : 320 });\n\n      // Create the container to house the Blockly editor and elevator simulator\n      container = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      doc.add(container, { edge : 10, top : 60 });\n\n      // Await messages from Blockly\n      window.addEventListener(\n        \"message\",\n        (event) =>\n        {\n          let             code;\n\n          switch(event.data.type)\n          {\n          case \"control\" :\n            switch(event.data.name)\n            {\n            case \"run\" :\n              code =\n                [\n                  \"console.clear();\",\n                  \"elevatorSim.Elevator.getInstance().reinit();\",\n                  \"do_initially();\",\n                  event.data.value,\n                  \"enabledPeriodicInterval = setInterval(do_periodically, 50);\"\n                ].join(\"\\n\");\n              eval(code);\n              break;\n\n            case \"setEnabled\" :\n              this._enabled.setValue(event.data.value);\n              break;\n\n            case \"codeXML\" :\n              this._code = event.data.value;\n              break;\n\n            case \"log\" :\n              qx.log.Logger.info(event.data.value);\n              break;\n            }\n            break;\n          }\n        });\n\n      // Add the Blockly editor\n      this._blockly = new qx.ui.embed.Iframe(\"resource/devEnv/blockly.html\");\n      container.add(this._blockly, { flex : 1 });\n\n      // Add the elevator simulator\n      elevatorCanvas = elevatorSim.Elevator.getInstance();\n      container.add(elevatorCanvas);\n\n      // Initially hide it\n      elevatorCanvas.hide();\n\n      // Initially there is no code\n      this._code = \"\";\n    },\n\n    /*\n     * Show a window in which the user can paste code to be imported. This\n     * code, following confirmation, will replace the existing block program.\n     */\n    _import : function()\n    {\n      let             hBox;\n      let             label;\n      let             textArea;\n      let             butImport;\n      let             butCancel;\n\n      if (! this._win)\n      {\n        this._win = new qx.ui.window.Window(\"Import\");\n        this._win.setPadding(10);\n        this._win.setLayout(new qx.ui.layout.VBox(10));\n      }\n\n      // Clean up from last time (if there was a last time)\n      this._win.removeAll();\n\n      // Create the form\n      label = new qx.ui.basic.Label(\n        \"Paste the previously exported code to be imported here:\");\n      this._win.add(label);\n\n      textArea = new qx.ui.form.TextArea(\"\");\n      textArea.set(\n        {\n          width  : 400,\n          height : 200\n        });\n      this._win.add(textArea);\n\n      hBox = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      this._win.add(hBox);\n\n      // We'll center the buttons. Add the left spacer\n      hBox.add(new qx.ui.core.Spacer(), { flex : 1 });\n\n      // Add the Import button\n      butImport = new qx.ui.form.Button(\"Import\");\n      hBox.add(butImport);\n      butImport.addListener(\n        \"execute\",\n        () =>\n        {\n          if (window.confirm(\n              \"Are you sure you want to import this code, \" +\n              \"which will overwrite the existing block program?\"))\n          {\n            this._blockly.getWindow().postMessage(\n              {\n                type  : \"control\",\n                name  : \"load\",\n                value : textArea.getValue()\n              },\n              \"*\");\n          }\n\n          this._win.close();\n        });\n\n      // Add the Cancel button\n      butCancel = new qx.ui.form.Button(\"Cancel\");\n      hBox.add(butCancel);\n      butCancel.addListener(\n        \"execute\",\n        () =>\n        {\n          this._win.close();\n        });\n\n      // We'll center the buttons. Add the right spacer\n      hBox.add(new qx.ui.core.Spacer(), { flex : 1 });\n\n\n      this._win.center();\n      this._win.open();\n    },\n\n    /**\n     * Disable the simulator and Show an error message\n     *\n     * @param message {String}\n     *   The message to be shown\n     *\n     * @ignore alert\n     */\n    showError : function(message)\n    {\n      // Stop the simulator\n      this._enabled.setValue(false);\n\n      // Show the message\n      alert(message + \"\\nSimulation disabled\");\n    }\n  }\n});\n"
  ]
}