{
  "version": 3,
  "sources": [
    "/home/derrell/ME/FRC/frc-elevator-sim.git/source/class/elevatorSim/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "enabledPeriodicInterval",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "_win",
    "_code",
    "_blockly",
    "_enabled",
    "_butExport",
    "_butImport",
    "main",
    "doc",
    "hBox",
    "font",
    "label",
    "container",
    "scriptLoader",
    "elevatorCanvas",
    "appender",
    "log",
    "Native",
    "Console",
    "getRoot",
    "ui",
    "basic",
    "Label",
    "bom",
    "Font",
    "set",
    "size",
    "bold",
    "family",
    "setFont",
    "add",
    "top",
    "left",
    "Composite",
    "layout",
    "HBox",
    "right",
    "form",
    "Button",
    "addListener",
    "copyToClipboard",
    "str",
    "el",
    "document",
    "createElement",
    "value",
    "setAttribute",
    "style",
    "position",
    "body",
    "appendChild",
    "select",
    "execCommand",
    "removeChild",
    "window",
    "alert",
    "_import",
    "CheckBox",
    "e",
    "elevator",
    "elevatorSim",
    "Elevator",
    "getInstance",
    "getWindow",
    "postMessage",
    "type",
    "name",
    "getData",
    "setEnabled",
    "clearInterval",
    "setVelocity",
    "edge",
    "addEventListener",
    "event",
    "code",
    "data",
    "join",
    "eval",
    "setValue",
    "embed",
    "Iframe",
    "flex",
    "hide",
    "textArea",
    "butImport",
    "butCancel",
    "Window",
    "setPadding",
    "setLayout",
    "VBox",
    "removeAll",
    "TextArea",
    "width",
    "height",
    "core",
    "Spacer",
    "confirm",
    "getValue",
    "close",
    "center",
    "open",
    "showError",
    "message",
    "Application"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*\n * Copyright: 2021 Derrell Lipman\n *\n * License: MIT license\n *\n * Authors: Derrell Lipman (derrell) derrell.lipman@unwireduniverse.com\n */\n\n\n/**\n * @asset(elevatorSim/*)\n * @asset(devEnv/*)\n * @ignore Blockly\n */\nvar enabledPeriodicInterval;  // global to allow eval()'ed code to use\n\nqx.Class.define(\"elevatorSim.Application\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    _win       : null,\n    _code      : null,\n    _blockly   : null,\n    _enabled   : null,\n    _butExport : null,\n    _butImport : null,\n\n    main : function()\n    {\n      let             doc;\n      let             hBox;\n      let             font;\n      let             label;\n      let             container;\n      let             scriptLoader;\n      let             elevatorCanvas;\n\n      this.base(arguments);\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        let appender;\n\n        appender = qx.log.appender.Native;\n        appender = qx.log.appender.Console;\n      }\n\n      doc = this.getRoot();\n\n      // Add the title\n      label = new qx.ui.basic.Label(\"Elevator Subsystem Simulator\");\n      font = new qx.bom.Font();\n      font.set(\n        {\n          size   : 20,\n          bold   : true,\n          family : [ \"sans-serif\" ]\n        });\n      label.setFont(font);\n      doc.add(label, { top : 30, left : 10 });\n\n      // Create the Export and Import buttons\n      hBox = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      doc.add(hBox, { top : 26, right : 450 });\n\n      this._butExport = new qx.ui.form.Button(\"Export\");\n      hBox.add(this._butExport);\n      this._butExport.addListener(\n        \"execute\",\n        () =>\n        {\n          const copyToClipboard =\n            str =>\n              {\n                const el = document.createElement('textarea');\n                el.value = str;\n                el.setAttribute('readonly', '');\n                el.style.position = 'absolute';\n                el.style.left = '-9999px';\n                document.body.appendChild(el);\n                el.select();\n                document.execCommand('copy');\n                document.body.removeChild(el);\n              };\n          copyToClipboard(this._code);\n          window.alert(\n            \"The code is now in your clipboard. \" +\n              \"Save it someplace, and later you can Import it.\");\n        });\n\n      this._butImport = new qx.ui.form.Button(\"Import\");\n      hBox.add(this._butImport);\n      this._butImport.addListener(\"execute\", this._import, this);\n\n      // Create the Enabled checkbox\n      this._enabled = new qx.ui.form.CheckBox(\"Enabled\");\n      this._enabled.addListener(\n        \"changeValue\",\n        (e) =>\n        {\n          let             elevator = elevatorSim.Elevator.getInstance();\n\n          this._blockly.getWindow().postMessage(\n            {\n              type  : \"control\",\n              name  : \"enabled\",\n              value : e.getData()\n            },\n            \"*\");\n\n          // Enable or disable the elevator\n          elevator.setEnabled(e.getData());\n\n          if (! e.getData())\n          {\n            clearInterval(enabledPeriodicInterval);\n            elevator.setVelocity(0);\n          }\n        });\n      doc.add(this._enabled, { top : 30, right : 320 });\n\n      // Create the container to house the Blockly editor and elevator simulator\n      container = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      doc.add(container, { edge : 10, top : 60 });\n\n      // Await messages from Blockly\n      window.addEventListener(\n        \"message\",\n        (event) =>\n        {\n          let             code;\n\n          switch(event.data.type)\n          {\n          case \"control\" :\n            switch(event.data.name)\n            {\n            case \"run\" :\n              code =\n                [\n                  \"console.clear();\",\n                  \"elevatorSim.Elevator.getInstance().reinit();\",\n                  \"do_initially();\",\n                  event.data.value,\n                  \"enabledPeriodicInterval = setInterval(do_periodically, 50);\"\n                ].join(\"\\n\");\n              eval(code);\n              break;\n\n            case \"setEnabled\" :\n              this._enabled.setValue(event.data.value);\n              break;\n\n            case \"codeXML\" :\n              this._code = event.data.value;\n              break;\n            }\n            break;\n          }\n        });\n\n      // Add the Blockly editor\n      this._blockly = new qx.ui.embed.Iframe(\"resource/devEnv/blockly.html\");\n      container.add(this._blockly, { flex : 1 });\n\n      // Add the elevator simulator\n      elevatorCanvas = elevatorSim.Elevator.getInstance();\n      container.add(elevatorCanvas);\n\n      // Initially hide it\n      elevatorCanvas.hide();\n\n      // Initially there is no code\n      this._code = \"\";\n    },\n\n    /*\n     * Show a window in which the user can paste code to be imported. This\n     * code, following confirmation, will replace the existing block program.\n     */\n    _import : function()\n    {\n      let             hBox;\n      let             label;\n      let             textArea;\n      let             butImport;\n      let             butCancel;\n\n      if (! this._win)\n      {\n        this._win = new qx.ui.window.Window(\"Import\");\n        this._win.setPadding(10);\n        this._win.setLayout(new qx.ui.layout.VBox(10));\n      }\n\n      // Clean up from last time (if there was a last time)\n      this._win.removeAll();\n\n      // Create the form\n      label = new qx.ui.basic.Label(\n        \"Paste the previously exported code to be imported here:\");\n      this._win.add(label);\n\n      textArea = new qx.ui.form.TextArea(\"\");\n      textArea.set(\n        {\n          width  : 400,\n          height : 200\n        });\n      this._win.add(textArea);\n\n      hBox = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      this._win.add(hBox);\n\n      // We'll center the buttons. Add the left spacer\n      hBox.add(new qx.ui.core.Spacer(), { flex : 1 });\n\n      // Add the Import button\n      butImport = new qx.ui.form.Button(\"Import\");\n      hBox.add(butImport);\n      butImport.addListener(\n        \"execute\",\n        () =>\n        {\n          if (window.confirm(\n              \"Are you sure you want to import this code, \" +\n              \"which will overwrite the existing block program?\"))\n          {\n            this._blockly.getWindow().postMessage(\n              {\n                type  : \"control\",\n                name  : \"load\",\n                value : textArea.getValue()\n              },\n              \"*\");\n          }\n\n          this._win.close();\n        });\n\n      // Add the Cancel button\n      butCancel = new qx.ui.form.Button(\"Cancel\");\n      hBox.add(butCancel);\n      butCancel.addListener(\n        \"execute\",\n        () =>\n        {\n          this._win.close();\n        });\n\n      // We'll center the buttons. Add the right spacer\n      hBox.add(new qx.ui.core.Spacer(), { flex : 1 });\n\n\n      this._win.center();\n      this._win.open();\n    },\n\n    /**\n     * Disable the simulator and Show an error message\n     *\n     * @param message {String}\n     *   The message to be shown\n     *\n     * @ignore alert\n     */\n    showError : function(message)\n    {\n      // Stop the simulator\n      this._enabled.setValue(false);\n\n      // Show the message\n      alert(message + \"\\nSimulation disabled\");\n    }\n  }\n});\n"
  ]
}