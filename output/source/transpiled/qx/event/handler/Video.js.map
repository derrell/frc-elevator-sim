{
  "version": 3,
  "sources": [
    "/home/derrell/ME/FRC/training/elevatorSim/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Video.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "construct",
    "__onNativeListener",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "abort",
    "canplay",
    "canplaythrough",
    "durationchange",
    "emptied",
    "ended",
    "error",
    "loadeddata",
    "loadedmetadata",
    "loadstart",
    "pause",
    "play",
    "playing",
    "progress",
    "ratechange",
    "seeked",
    "seeking",
    "stalled",
    "suspend",
    "timeupdate",
    "volumechange",
    "waiting",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "lower",
    "tagName",
    "toLowerCase",
    "registerEvent",
    "capture",
    "bom",
    "Event",
    "addNativeListener",
    "GlobalError",
    "observeMethod",
    "domEvent",
    "getTarget",
    "fireNonBubblingEvent",
    "Dom",
    "undefined",
    "cancelable",
    "unregisterEvent",
    "removeNativeListener",
    "defer",
    "addHandler",
    "handler",
    "Video"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2021 Zenesis Limited, https://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman, john.spackman@zenesis.com)\n\n************************************************************************ */\n\n/**\n * Defines the event handlers for Video tags - also Audio because they are identical\n */\nqx.Class.define(\"qx.event.handler.Video\", {\n  extend : qx.core.Object,\n  implement : qx.event.IEventHandler,\n\n  construct() {\n    this.base(arguments);\n    this.__onNativeListener = qx.lang.Function.listener(this._onNative, this);\n  },\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES : {\n      abort: 1,\n      canplay: 1,\n      canplaythrough: 1,\n      durationchange: 1,\n      emptied: 1,\n      ended: 1,\n      error: 1,\n      loadeddata: 1,\n      loadedmetadata: 1,\n      loadstart: 1,\n      pause: 1,\n      play: 1,\n      playing: 1,\n      progress: 1,\n      ratechange: 1,\n      seeked: 1,\n      seeking: 1,\n      stalled: 1,\n      suspend: 1,\n      timeupdate: 1,\n      volumechange: 1,\n      waiting: 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : false\n  },\n\n  members : {\n    // interface implementation\n    canHandleEvent(target, type) {\n      var lower = target.tagName.toLowerCase();\n\n      if (lower === \"video\" || lower === \"audio\") {\n        return true;\n      }\n\n      return false;\n    },\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      qx.bom.Event.addNativeListener(target, type, this.__onNativeListener);\n    },\n\n    /**\n     * Default event handler for events that do not bubble\n     *\n     * @signature function(domEvent, eventId)\n     * @param domEvent {Event} Native event\n     */\n    _onNative: qx.event.GlobalError.observeMethod(function(domEvent) {\n      let target = qx.bom.Event.getTarget(domEvent);\n \n      qx.event.Registration.fireNonBubblingEvent(\n        target, \n        domEvent.type,\n        qx.event.type.Dom, \n        [domEvent, target, undefined, undefined, domEvent.cancelable]\n      );\n    }),\n\n    // interface implementation\n    unregisterEvent(target, type) {\n      qx.bom.Event.removeNativeListener(target, type, this.__onNativeListener);\n    }\n  },\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}