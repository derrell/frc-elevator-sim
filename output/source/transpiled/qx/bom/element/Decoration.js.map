{
  "version": 3,
  "sources": [
    "/home/derrell/ME/FRC/frc-elevator-sim.git/node_modules/@qooxdoo/framework/source/class/qx/bom/element/Decoration.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "DEBUG",
    "__warnings",
    "__alphaFixRepeats",
    "core",
    "Environment",
    "select",
    "__repeatToTagname",
    "update",
    "element",
    "source",
    "repeat",
    "style",
    "tag",
    "getTagName",
    "tagName",
    "toLowerCase",
    "Error",
    "ret",
    "getAttributes",
    "src",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "backgroundPosition",
    "undefined",
    "clip",
    "bom",
    "Style",
    "setStyles",
    "get",
    "filters",
    "apply",
    "e",
    "create",
    "css",
    "compile",
    "isFontUri",
    "font",
    "theme",
    "manager",
    "Font",
    "resolve",
    "match",
    "styles",
    "lang",
    "Object",
    "clone",
    "getStyles",
    "width",
    "height",
    "parseInt",
    "display",
    "verticalAlign",
    "position",
    "_style",
    "hasOwnProperty",
    "getCssName",
    "charCode",
    "fromFontUriToCharCode",
    "String",
    "fromCharCode",
    "endsWith",
    "fontSize",
    "lineHeight",
    "WebkitUserDrag",
    "format",
    "getImageFormat",
    "io",
    "ImageLoader",
    "getFormat",
    "log",
    "Logger",
    "warn",
    "result",
    "dimension",
    "__getDimension",
    "__normalizeWidthHeight",
    "processAlphaFix",
    "__processScale",
    "__processScaleXScaleY",
    "__processRepeats",
    "getImageWidth",
    "getWidth",
    "getImageHeight",
    "getHeight",
    "sizingMethod",
    "filter",
    "backgroundImage",
    "backgroundRepeat",
    "uri",
    "sourceid",
    "clipped",
    "getCombinedFormat",
    "data",
    "getData",
    "combinedid",
    "toDataUri",
    "__getStylesForClippedScaleX",
    "__getStylesForClippedScaleY",
    "__checkForPotentialClippedImage",
    "imageHeight",
    "top",
    "bottom",
    "imageWidth",
    "left",
    "right",
    "offx",
    "offy",
    "paddingTop",
    "paddingLeft",
    "paddingRight",
    "paddingBottom",
    "bg",
    "Background",
    "key",
    "__getStylesForSingleRepeat",
    "split",
    "isNaN",
    "has",
    "indexOf",
    "debug",
    "Decoration"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n/**\n * Powerful creation and update features for images used for decoration\n * purposes like for rounded borders, icons, etc.\n *\n * Includes support for image clipping, PNG alpha channel support, additional\n * repeat options like <code>scale-x</code> or <code>scale-y</code>.\n */\nqx.Class.define(\"qx.bom.element.Decoration\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Boolean} Whether clipping hints should be logged */\n    DEBUG : false,\n\n    /** @type {Map} Collect warnings for potential clipped images */\n    __warnings : {},\n\n    /** @type {Map} List of repeat modes which supports the IE AlphaImageLoader */\n    __alphaFixRepeats : qx.core.Environment.select(\"engine.name\",\n    {\n      \"mshtml\" :\n      {\n        \"scale-x\" : true,\n        \"scale-y\" : true,\n        \"scale\" : true,\n        \"no-repeat\" : true\n      },\n\n      \"default\" : null\n    }),\n\n\n    /** @type {Map} Mapping between background repeat and the tag to create */\n    __repeatToTagname :\n    {\n      \"scale-x\" : \"img\",\n      \"scale-y\" : \"img\",\n      \"scale\" : \"img\",\n      \"repeat\" : \"div\",\n      \"no-repeat\" : \"div\",\n      \"repeat-x\" : \"div\",\n      \"repeat-y\" : \"div\"\n    },\n\n\n    /**\n     * Updates the element to display the given source\n     * with the repeat option.\n     *\n     * @param element {Element} DOM element to update\n     * @param source {String} Any valid URI\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param style {Map} Additional styles to apply\n     */\n    update : function(element, source, repeat, style)\n    {\n      var tag = this.getTagName(repeat, source);\n      if (tag != element.tagName.toLowerCase()) {\n\n        // The \"no-repeat\" means that `getTagName` will suggest a `div` as opposed to an `img` tag, preferring to use\n        //  `img` only for things that need scaling.  The Desktop `qx.ui.*` will always follow this rule, but it\n        //  is valid for virtual DOM (`qx.html.*`) to be used to create a no-repeat `img` tag.  Ignore the validation\n        //  for `no-repeat` `img`.\n        if (repeat != \"no-repeat\" || element.tagName.toLowerCase() != \"img\") {\n          throw new Error(\"Image modification not possible because elements could not be replaced at runtime anymore!\");\n        }\n      }\n\n      var ret = this.getAttributes(source, repeat, style);\n\n      if (tag === \"img\") {\n        element.src = ret.src || qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\");\n      }\n\n      // Fix for old background position\n      if (element.style.backgroundPosition != \"\" && ret.style.backgroundPosition === undefined) {\n        ret.style.backgroundPosition = null;\n      }\n\n      // Fix for old clip\n      if (element.style.clip != \"\" && ret.style.clip === undefined) {\n        ret.style.clip = null;\n      }\n\n      // Apply new styles\n      qx.bom.element.Style.setStyles(element, ret.style);\n\n      // we need to apply the filter to prevent black rendering artifacts\n      // http://blog.hackedbrain.com/archive/2007/05/21/6110.aspx\n      if (qx.core.Environment.get(\"css.alphaimageloaderneeded\"))\n      {\n        try {\n          element.filters[\"DXImageTransform.Microsoft.AlphaImageLoader\"].apply();\n        } catch(e) {}\n      }\n    },\n\n\n    /**\n     * Creates the HTML for a decorator image element with the given options.\n     *\n     * @param source {String} Any valid URI\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param style {Map} Additional styles to apply\n     * @return {String} Decorator image HTML\n     */\n    create : function(source, repeat, style)\n    {\n      var tag = this.getTagName(repeat, source);\n      var ret = this.getAttributes(source, repeat, style);\n      var css = qx.bom.element.Style.compile(ret.style);\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n\n      if (ResourceManager.isFontUri(source)) {\n        var font = qx.theme.manager.Font.getInstance().resolve(source.match(/@([^/]+)/)[1]);\n\n        var styles = qx.lang.Object.clone(font.getStyles());\n        styles['width'] = style.width;\n        styles['height'] = style.height;\n        styles['fontSize'] = (parseInt(style.width) > parseInt(style.height) ? style.height : style.width);\n        styles['display'] = style.display;\n        styles['verticalAlign'] = style.verticalAlign;\n        styles['position'] = style.position;\n\n        var css = \"\";\n        for (var _style in styles) {\n          if (styles.hasOwnProperty(_style)) {\n            css += qx.bom.Style.getCssName(_style) + \": \" + styles[_style] + \";\";\n          }\n        }\n\n        var charCode = ResourceManager.fromFontUriToCharCode(source);\n        \n        return '<div style=\"' + css + '\">' + String.fromCharCode(charCode) + '</div>';\n      }\n      else {\n        if (tag === \"img\") {\n          return '<img src=\"' + ret.src + '\" style=\"' + css + '\"/>';\n        } else {\n          return '<div style=\"' + css + '\"></div>';\n        }\n      }\n    },\n\n\n    /**\n     * Translates the given repeat option to a tag name. Useful\n     * for systems which depends on early information of the tag\n     * name to prepare element like {@link qx.html.Image}.\n     *\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param source {String?null} Source used to identify the image format\n     * @return {String} The tag name: <code>div</code> or <code>img</code>\n     */\n    getTagName : function(repeat, source)\n    {\n      if (source && qx.core.Environment.get(\"css.alphaimageloaderneeded\") &&\n          this.__alphaFixRepeats[repeat] && source.endsWith(\".png\"))\n      {\n        return \"div\";\n      }\n\n      return this.__repeatToTagname[repeat];\n    },\n\n\n    /**\n     * This method is used to collect all needed attributes for\n     * the tag name detected by {@link #getTagName}.\n     *\n     * @param source {String} Image source\n     * @param repeat {String} Repeat mode of the image\n     * @param style {Map} Additional styles to apply\n     * @return {String} Markup for image\n     */\n    getAttributes : function(source, repeat, style)\n    {\n      if (!style) {\n        style = {};\n      }\n\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n      {\n        // Add a fix for small blocks where IE has a minHeight\n        // of the fontSize in quirks mode\n        style.fontSize = 0;\n        style.lineHeight = 0;\n      }\n      else if ((qx.core.Environment.get(\"engine.name\") == \"webkit\"))\n      {\n        // This stops images from being draggable in webkit\n        style.WebkitUserDrag = \"none\";\n      }\n\n      var format = qx.util.ResourceManager.getInstance().getImageFormat(source) ||\n                   qx.io.ImageLoader.getFormat(source);\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (source != null && format == null) {\n          qx.log.Logger.warn(\"ImageLoader: Not recognized format of external image '\" + source + \"'!\");\n        }\n      }\n\n      var result;\n\n      // Enable AlphaImageLoader in IE6/IE7/IE8\n      if (qx.core.Environment.get(\"css.alphaimageloaderneeded\") &&\n          this.__alphaFixRepeats[repeat] && format === \"png\")\n      {\n        var dimension = this.__getDimension(source);\n        this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n        result = this.processAlphaFix(style, repeat, source);\n      }\n      else\n      {\n        delete style.clip;\n        if (repeat === \"scale\") {\n          result = this.__processScale(style, repeat, source);\n        } else  if (repeat === \"scale-x\" || repeat === \"scale-y\") {\n          result = this.__processScaleXScaleY(style, repeat, source);\n        } else {\n          // Native repeats or \"no-repeat\"\n          result = this.__processRepeats(style, repeat, source);\n        }\n      }\n\n      return result;\n    },\n\n\n    /**\n     * Normalize the given width and height values\n     *\n     * @param style {Map} style information\n     * @param width {Integer?null} width as number or null\n     * @param height {Integer?null} height as number or null\n     */\n    __normalizeWidthHeight : function(style, width, height)\n    {\n      if (style.width == null && width != null) {\n        style.width = width + \"px\";\n      }\n\n      if (style.height == null && height != null) {\n        style.height = height + \"px\";\n      }\n    },\n\n\n    /**\n     * Returns the dimension of the image by calling\n     * {@link qx.util.ResourceManager} or {@link qx.io.ImageLoader}\n     * depending on if the image is a managed one.\n     *\n     * @param source {String} image source\n     * @return {Map} dimension of image\n     */\n    __getDimension : function(source)\n    {\n      var width = qx.util.ResourceManager.getInstance().getImageWidth(source) ||\n                  qx.io.ImageLoader.getWidth(source);\n      var height = qx.util.ResourceManager.getInstance().getImageHeight(source) ||\n                   qx.io.ImageLoader.getHeight(source);\n\n      return {\n        width: width,\n        height: height\n      };\n    },\n\n\n    /**\n     * Get all styles for IE browser which need to load the image\n     * with the help of the AlphaImageLoader\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     *\n     * @return {Map} style infos\n     */\n    processAlphaFix : function(style, repeat, source)\n    {\n      if (repeat == \"repeat\" || repeat == \"repeat-x\" || repeat == \"repeat-y\") {\n        return style;\n      }\n      var sizingMethod = repeat == \"no-repeat\" ? \"crop\" : \"scale\";\n      var filter = \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" +\n                   qx.util.ResourceManager.getInstance().toUri(source) +\n                   \"', sizingMethod='\" + sizingMethod + \"')\";\n\n      style.filter = filter;\n      style.backgroundImage = style.backgroundRepeat = \"\";\n      delete style[\"background-image\"];\n      delete style[\"background-repeat\"];\n\n      return {\n        style : style\n      };\n    },\n\n\n    /**\n     * Process scaled images.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processScale : function(style, repeat, source)\n    {\n      var uri = qx.util.ResourceManager.getInstance().toUri(source);\n      var dimension = this.__getDimension(source);\n\n      this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n\n      return {\n        src : uri,\n        style : style\n      };\n    },\n\n\n    /**\n     * Process images which are either scaled horizontally or\n     * vertically.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param sourceid {String} image resource id\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processScaleXScaleY : function(style, repeat, sourceid)\n    {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var clipped = ResourceManager.getCombinedFormat(sourceid);\n      var dimension = this.__getDimension(sourceid);\n      var uri;\n\n      if (clipped)\n      {\n        var data = ResourceManager.getData(sourceid);\n        var combinedid = data[4];\n        if (clipped == \"b64\") {\n          uri = ResourceManager.toDataUri(sourceid);\n        }\n        else {\n          uri = ResourceManager.toUri(combinedid);\n        }\n\n        if (repeat === \"scale-x\") {\n          style = this.__getStylesForClippedScaleX(style, data, dimension.height);\n        } else {\n          style = this.__getStylesForClippedScaleY(style, data, dimension.width);\n        }\n\n        return {\n          src : uri,\n          style : style\n        };\n      }\n\n      // No clipped image available\n      else\n      {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.__checkForPotentialClippedImage(sourceid);\n        }\n\n        if (repeat == \"scale-x\")\n        {\n          style.height = dimension.height == null ? null : dimension.height + \"px\";\n          // note: width is given by the user\n        }\n        else if (repeat == \"scale-y\")\n        {\n          style.width = dimension.width == null ? null : dimension.width + \"px\";\n          // note: height is given by the user\n        }\n\n        uri = ResourceManager.toUri(sourceid);\n        return {\n          src : uri,\n          style : style\n        };\n      }\n    },\n\n\n    /**\n     * Generates the style infos for horizontally scaled clipped images.\n     *\n     * @param style {Map} style infos\n     * @param data {Array} image data retrieved from the {@link qx.util.ResourceManager}\n     * @param height {Integer} image height\n     *\n     * @return {Map} style infos and image URI\n     */\n    __getStylesForClippedScaleX : function(style, data, height)\n    {\n      // Use clipped image (multi-images on x-axis)\n      var imageHeight = qx.util.ResourceManager.getInstance().getImageHeight(data[4]);\n\n      // Add size and clipping\n      style.clip = {top: -data[6], height: height};\n      style.height = imageHeight + \"px\";\n\n      // note: width is given by the user\n\n      // Fix user given y-coordinate to include the combined image offset\n      if (style.top != null) {\n        style.top = (parseInt(style.top, 10) + data[6]) + \"px\";\n      } else if (style.bottom != null) {\n        style.bottom = (parseInt(style.bottom, 10) + height - imageHeight - data[6]) + \"px\";\n      }\n\n      return style;\n    },\n\n\n    /**\n     * Generates the style infos for vertically scaled clipped images.\n     *\n     * @param style {Map} style infos\n     * @param data {Array} image data retrieved from the {@link qx.util.ResourceManager}\n     * @param width {Integer} image width\n     *\n     * @return {Map} style infos and image URI\n     */\n    __getStylesForClippedScaleY : function(style, data, width)\n    {\n      // Use clipped image (multi-images on x-axis)\n      var imageWidth = qx.util.ResourceManager.getInstance().getImageWidth(data[4]);\n\n      // Add size and clipping\n      style.clip = {left: -data[5], width: width};\n      style.width = imageWidth + \"px\";\n\n      // note: height is given by the user\n\n      // Fix user given x-coordinate to include the combined image offset\n      if (style.left != null) {\n        style.left = (parseInt(style.left, 10) + data[5]) + \"px\";\n      } else if (style.right != null) {\n        style.right = (parseInt(style.right, 10) + width - imageWidth - data[5]) + \"px\";\n      }\n\n      return style;\n    },\n\n\n    /**\n     * Process repeated images.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param sourceid {String} image resource id\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processRepeats : function(style, repeat, sourceid)\n    {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var clipped = ResourceManager.getCombinedFormat(sourceid);\n      var dimension = this.__getDimension(sourceid);\n\n      // Double axis repeats cannot be clipped\n      if (clipped && repeat !== \"repeat\")\n      {\n        // data = [ 8, 5, \"png\", \"qx\", \"qx/decoration/Modern/arrows-combined.png\", -36, 0]\n        var data = ResourceManager.getData(sourceid);\n        var combinedid = data[4];\n        if (clipped == \"b64\")\n        {\n          var uri = ResourceManager.toDataUri(sourceid);\n          var offx = 0;\n          var offy = 0;\n        }\n        else\n        {\n          var uri  = ResourceManager.toUri(combinedid);\n          var offx = data[5];\n          var offy = data[6];\n\n          // honor padding for combined images\n          if (style.paddingTop || style.paddingLeft || style.paddingRight || style.paddingBottom) {\n            var top = style.paddingTop || 0;\n            var left = style.paddingLeft || 0;\n\n            offx += style.paddingLeft || 0;\n            offy += style.paddingTop || 0;\n\n            style.clip = {left: left, top: top, width: dimension.width, height: dimension.height};\n          }\n        }\n\n        var bg = qx.bom.element.Background.getStyles(uri, repeat, offx, offy);\n        for (var key in bg) {\n          style[key] = bg[key];\n        }\n\n        if (dimension.width != null && style.width == null && (repeat == \"repeat-y\" || repeat === \"no-repeat\")) {\n          style.width = dimension.width + \"px\";\n        }\n\n        if (dimension.height != null && style.height == null && (repeat == \"repeat-x\" || repeat === \"no-repeat\")) {\n          style.height = dimension.height + \"px\";\n        }\n\n        return {\n          style : style\n        };\n      }\n      else\n      {\n        // honor padding\n        var top = style.paddingTop || 0;\n        var left = style.paddingLeft || 0;\n        style.backgroundPosition = left + \"px \" + top + \"px\";\n\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (repeat !== \"repeat\") {\n            this.__checkForPotentialClippedImage(sourceid);\n          }\n        }\n\n        this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n        this.__getStylesForSingleRepeat(style, sourceid, repeat);\n\n        return {\n          style : style\n        };\n      }\n    },\n\n\n    /**\n     * Generate all style infos for single repeated images\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     */\n    __getStylesForSingleRepeat : function(style, source, repeat)\n    {\n      // retrieve the \"backgroundPosition\" style if available to prevent\n      // overwriting with default values\n      var top = null;\n      var left = null;\n      if (style.backgroundPosition)\n      {\n        var backgroundPosition = style.backgroundPosition.split(\" \");\n\n        left = parseInt(backgroundPosition[0], 10);\n        if (isNaN(left)) {\n          left = backgroundPosition[0];\n        }\n\n        top = parseInt(backgroundPosition[1], 10);\n        if (isNaN(top)) {\n          top = backgroundPosition[1];\n        }\n      }\n\n      var bg = qx.bom.element.Background.getStyles(source, repeat, left, top);\n      for (var key in bg) {\n        style[key] = bg[key];\n      }\n\n      // Reset the AlphaImageLoader filter if applied\n      // This prevents IE from setting BOTH CSS filter AND backgroundImage\n      // This is only a fallback if the image is not recognized as PNG\n      // If it's a Alpha-PNG file it *may* result in display problems\n      if (style.filter) {\n        style.filter = \"\";\n      }\n    },\n\n\n    /**\n     * Output a warning if the image can be clipped.\n     *\n     * @param source {String} image source\n     */\n    __checkForPotentialClippedImage : function(source)\n    {\n      if (this.DEBUG && qx.util.ResourceManager.getInstance().has(source) && source.indexOf(\"qx/icon\") == -1)\n      {\n        if (!this.__warnings[source])\n        {\n          qx.log.Logger.debug(\"Potential clipped image candidate: \" + source);\n          this.__warnings[source] = true;\n        }\n      }\n    }\n  }\n});\n"
  ]
}