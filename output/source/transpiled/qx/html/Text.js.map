{
  "version": 3,
  "sources": [
    "/home/derrell/ME/FRC/frc-elevator-sim.git/node_modules/@qooxdoo/framework/source/class/qx/html/Text.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Node",
    "construct",
    "text",
    "__text",
    "members",
    "_createDomElement",
    "window",
    "document",
    "createTextNode",
    "isRoot",
    "_copyData",
    "fromMarkup",
    "propertiesFromDom",
    "elem",
    "_domNode",
    "nodeValue",
    "_useNode",
    "domNode",
    "setText",
    "_useNodeImpl",
    "_syncData",
    "_serializeImpl",
    "writer",
    "useMarkup",
    "Error",
    "value",
    "direct",
    "Element",
    "_modified",
    "$$hash",
    "_scheduleFlush",
    "getText",
    "defer",
    "statics",
    "__deferredCall",
    "util",
    "DeferredCall",
    "flush",
    "destruct",
    "toHashCode",
    "_scroll",
    "__attribValues",
    "__styleValues",
    "__eventValues",
    "__attribJobs",
    "__styleJobs",
    "__lazyScrollIntoViewX",
    "__lazyScrollIntoViewY",
    "Text"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,cAAhB,EAAgC;AAC9BC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,IADc;;AAG9B;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,mBAASC,IAAT,EAAe;AACxB,0CAAqB,OAArB;;AACA,UAAIA,IAAJ,EAAU;AACR,aAAKC,eAAL,GAAcD,IAAd;AACD;AACF,KApB6B;;AAsB9B;AACF;AACA;AACA;AACA;AAEEE,IAAAA,OAAO,EAAE;AACPD,MAAAA,eAAM,EAAE,IADD;;AAGP;AACJ;AACA;AACIE,MAAAA,iBAAiB,EAAE,6BAAW;AAC5B,eAAOC,MAAM,CAACC,QAAP,CAAgBC,cAAhB,CAA+B,KAAKL,eAAL,IAAe,EAA9C,CAAP;AACD,OARM;;AAUP;AACJ;AACA;AACIM,MAAAA,MAAM,EAAG,kBAAW;AAClB,eAAO,KAAP;AACD,OAfM;;AAiBP;AACJ;AACA;AACIC,MAAAA,SAAS,EAAE,mBAASC,UAAT,EAAqBC,iBAArB,EAAwC;AACjD,yDAAqBD,UAArB,EAAiCC,iBAAjC;;AACA,YAAIC,IAAI,GAAG,KAAKC,QAAhB;AACAD,QAAAA,IAAI,CAACE,SAAL,GAAiB,KAAKZ,eAAL,IAAe,EAAhC;AACD,OAxBM;;AA0BP;AACJ;AACA;AACIa,MAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAC1B,aAAKC,OAAL,CAAaD,OAAO,CAACF,SAArB;AACD,OA/BM;;AAiCP;AACJ;AACA;AACII,MAAAA,YAAY,EAAE,sBAASF,OAAT,EAAkB;AAC9B,aAAKC,OAAL,CAAaD,OAAO,CAACF,SAArB;AACD,OAtCM;;AAwCP;AACJ;AACA;AACIK,MAAAA,SAAS,EAAG,qBAAW;AACrB;;AACA,YAAIP,IAAI,GAAG,KAAKC,QAAhB;AACAD,QAAAA,IAAI,CAACE,SAAL,GAAiB,KAAKZ,eAAL,IAAe,EAAhC;AACD,OA/CM;;AAiDP;AACJ;AACA;AACIkB,MAAAA,cAAc,EAAE,wBAASC,MAAT,EAAiB;AAC/B,YAAI,KAAKnB,eAAL,KAAgB,IAApB,EAA0B;AACxBmB,UAAAA,MAAM,CAAC,KAAKnB,eAAN,CAAN;AACD;AACF,OAxDM;;AA0DP;AACJ;AACA;AACIoB,MAAAA,SAAS,EAAE,mBAASxB,IAAT,EAAe;AACxB,cAAM,IAAIyB,KAAJ,CAAU,yCAAV,CAAN;AACD,OA/DM;;AAiEP;AACJ;AACA;AACA;AACA;AACA;AACIN,MAAAA,OAAO,EAAE,iBAASO,KAAT,EAAgBC,MAAhB,EAAwB;AAC/B,aAAKvB,eAAL,GAAcsB,KAAd;;AACA,YAAIC,MAAM,IAAI,KAAKZ,QAAnB,EAA6B;AAC3B,eAAKA,QAAL,CAAcC,SAAd,GAA0BU,KAA1B;AACD,SAFD,MAEO;AACLjC,UAAAA,EAAE,CAACO,IAAH,CAAQ4B,OAAR,CAAgBC,SAAhB,CAA0B,KAAKC,MAA/B,IAAyC,IAAzC;;AACArC,UAAAA,EAAE,CAACO,IAAH,CAAQ4B,OAAR,CAAgBG,cAAhB,CAA+B,SAA/B;AACD;AACF,OA/EM;;AAiFP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,OAAO,EAAE,mBAAW;AAClB,eAAO,KAAK5B,eAAZ;AACD;AAxFM,KA5BqB;;AAuH9B;AACF;AACA;AACA;AACA;AAEE6B,IAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACvBA,MAAAA,OAAO,CAACC,uBAAR,GAAyB,IAAI1C,EAAE,CAAC2C,IAAH,CAAQC,YAAZ,CAAyBH,OAAO,CAACI,KAAjC,EAAwCJ,OAAxC,CAAzB;AACD,KA/H6B;;AAiI9B;AACF;AACA;AACA;AACA;AAEEK,IAAAA,QAAQ,EAAE,oBAAW;AACnB,UAAI,KAAKC,UAAL,EAAJ,EAAuB;AACrB,eAAO/C,EAAE,CAACO,IAAH,CAAQ4B,OAAR,CAAgBC,SAAhB,CAA0B,KAAKW,UAAL,EAA1B,CAAP;AACA,eAAO/C,EAAE,CAACO,IAAH,CAAQ4B,OAAR,CAAgBa,OAAhB,CAAwB,KAAKD,UAAL,EAAxB,CAAP;AACD;;AAED,WAAKE,uBAAL,GAAsB,KAAKC,sBAAL,GAAqB,KAAKC,sBAAL,GAAqB,KAAKC,qBAAL,GAAoB,KAAKC,oBAAL,GAAmB,KAAKC,8BAAL,GAA6B,KAAKC,8BAAL,GAA6B,IAAjK;AACD;AA9I6B,GAAhC;AArBAvD,EAAAA,EAAE,CAACO,IAAH,CAAQiD,IAAR,CAAarD,aAAb,GAA6BA,aAA7B",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2019-2020 Zenesis Limited, https://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (https://github.com/johnspackman, john.spackman@zenesis.com)\n\n************************************************************************ */\n\n/**\n * DOM representation of Text nodes\n */\nqx.Class.define(\"qx.html.Text\", {\n  extend: qx.html.Node,\n\n  /*\n   * ****************************************************************************\n   * CONSTRUCTOR\n   * ****************************************************************************\n   */\n\n  /**\n   * Creates a new Text\n   * \n   * @param value\n   *          {String?} the value of the text\n   */\n  construct: function(text) {\n    this.base(arguments, \"#text\");\n    if (text) {\n      this.__text = text;\n    }\n  },\n\n  /*\n   * ****************************************************************************\n   * MEMBERS\n   * ****************************************************************************\n   */\n\n  members: {\n    __text: null,\n\n    /*\n     * @Override\n     */\n    _createDomElement: function() {\n      return window.document.createTextNode(this.__text || \"\");\n    },\n\n    /*\n     * @Override\n     */\n    isRoot : function() {\n      return false;\n    },\n    \n    /*\n     * @Override\n     */\n    _copyData: function(fromMarkup, propertiesFromDom) {\n      this.base(arguments, fromMarkup, propertiesFromDom);\n      var elem = this._domNode;\n      elem.nodeValue = this.__text || \"\";\n    },\n    \n    /*\n     * @Override\n     */\n    _useNode: function(domNode) {\n      this.setText(domNode.nodeValue);\n    },\n\n    /*\n     * @Override\n     */\n    _useNodeImpl: function(domNode) {\n      this.setText(domNode.nodeValue);\n    },\n\n    /**\n     * @Override\n     */\n    _syncData : function() {\n      this.base(arguments);\n      var elem = this._domNode;\n      elem.nodeValue = this.__text || \"\";\n    },\n    \n    /*\n     * @Override\n     */\n    _serializeImpl: function(writer) {\n      if (this.__text !== null) {\n        writer(this.__text);\n      }\n    },\n    \n    /**\n     * @Override\n     */\n    useMarkup: function(html) {\n      throw new Error(\"Could not overwrite existing text node!\");\n    },\n    \n    /**\n     * Sets the text value\n     * \n     * @param value {String?} the text value of for the text node\n     * @param direct {Boolean?} whether to set the DOM node immediately if there is one \n     */\n    setText: function(value, direct) {\n      this.__text = value;\n      if (direct && this._domNode) {\n        this._domNode.nodeValue = value;\n      } else {\n        qx.html.Element._modified[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n    },\n    \n    /**\n     * Returns the value of the node\n     * \n     * @return {String} the text node\n     */\n    getText: function() {\n      return this.__text;\n    }\n  },\n\n  /*\n   * ****************************************************************************\n   * DEFER\n   * ****************************************************************************\n   */\n\n  defer: function(statics) {\n    statics.__deferredCall = new qx.util.DeferredCall(statics.flush, statics);\n  },\n\n  /*\n   * ****************************************************************************\n   * DESTRUCT\n   * ****************************************************************************\n   */\n\n  destruct: function() {\n    if (this.toHashCode()) {\n      delete qx.html.Element._modified[this.toHashCode()];\n      delete qx.html.Element._scroll[this.toHashCode()];\n    }\n\n    this.__attribValues = this.__styleValues = this.__eventValues = this.__attribJobs = this.__styleJobs = this.__lazyScrollIntoViewX = this.__lazyScrollIntoViewY = null;\n  }\n});\n"
  ]
}