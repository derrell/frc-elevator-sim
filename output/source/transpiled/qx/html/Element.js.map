{
  "version": 3,
  "sources": [
    "/home/derrell/ME/FRC/training/elevatorSim/node_modules/@qooxdoo/framework/source/class/qx/html/Element.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Node",
    "construct",
    "tagName",
    "styles",
    "attributes",
    "__styleValues",
    "__attribValues",
    "key",
    "Error",
    "classname",
    "initCssClass",
    "registerProperty",
    "value",
    "_domNode",
    "innerHTML",
    "writer",
    "property",
    "name",
    "statics",
    "DEBUG",
    "_hasRoots",
    "_defaultRoot",
    "_modified",
    "_visibility",
    "_scroll",
    "_actions",
    "__selection",
    "__focusHandler",
    "__mouseCapture",
    "__SELF_CLOSING_TAGS",
    "_scheduleFlush",
    "job",
    "Element",
    "__deferredCall",
    "schedule",
    "flush",
    "obj",
    "log",
    "Logger",
    "debug",
    "focusHandler",
    "__getFocusHandler",
    "focusedDomElement",
    "getFocus",
    "__willBecomeInvisible",
    "blur",
    "activeDomElement",
    "getActive",
    "bom",
    "deactivate",
    "captureDomElement",
    "__getCaptureElement",
    "releaseCapture",
    "later",
    "modified",
    "hc",
    "_willBeSeeable",
    "dom",
    "Hierarchy",
    "isRendered",
    "push",
    "i",
    "l",
    "length",
    "visibility",
    "element",
    "isVisible",
    "$$disposed",
    "style",
    "display",
    "core",
    "Environment",
    "get",
    "document",
    "documentMode",
    "scroll",
    "elem",
    "offsetWidth",
    "done",
    "__lazyScrollX",
    "scrollLeft",
    "__lazyScrollY",
    "scrollTop",
    "intoViewX",
    "__lazyScrollIntoViewX",
    "child",
    "getDomElement",
    "Scroll",
    "align",
    "intoViewY",
    "__lazyScrollIntoViewY",
    "activityEndActions",
    "action",
    "type",
    "args",
    "unshift",
    "apply",
    "selection",
    "Selection",
    "set",
    "start",
    "end",
    "event",
    "handler",
    "Appear",
    "refresh",
    "eventManager",
    "Registration",
    "getManager",
    "window",
    "getHandler",
    "Focus",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "domElement",
    "fromDomElement",
    "fromDomNode",
    "setDefaultRoot",
    "root",
    "warn",
    "getDefaultRoot",
    "properties",
    "cssClass",
    "init",
    "nullable",
    "check",
    "members",
    "__root",
    "__styleJobs",
    "__attribJobs",
    "_createDomElement",
    "create",
    "_nodeName",
    "serialize",
    "__childrenHaveChanged",
    "importQxObjectIds",
    "_serializeImpl",
    "data",
    "Attribute",
    "lang",
    "Object",
    "clone",
    "keys",
    "Style",
    "css",
    "compile",
    "_properties",
    "call",
    "undefined",
    "JSON",
    "stringify",
    "_children",
    "connectWidget",
    "widget",
    "connectObject",
    "disconnectWidget",
    "disconnectObject",
    "_addChildImpl",
    "_removeChildImpl",
    "getQxObject",
    "id",
    "thisId",
    "getQxObjectId",
    "thisAttributeId",
    "getAttribute",
    "setAttribute",
    "setQxObjectId",
    "resolveImpl",
    "node",
    "attributeId",
    "endsWith",
    "segs",
    "split",
    "parentNode",
    "addOwnedQxObject",
    "subId",
    "Array",
    "shift",
    "pop",
    "join",
    "Id",
    "children",
    "getChildren",
    "forEach",
    "_copyData",
    "fromMarkup",
    "propertiesFromDom",
    "str",
    "classes",
    "startsWith",
    "SVGAnimatedString",
    "baseVal",
    "setCssClass",
    "setStyles",
    "setCss",
    "setVisible",
    "_syncData",
    "jobs",
    "reset",
    "setRoot",
    "isRoot",
    "useMarkup",
    "helper",
    "createElement",
    "getHelperElement",
    "useElement",
    "firstChild",
    "useNode",
    "isFocusable",
    "tabIndex",
    "focusable",
    "FOCUSABLE_ELEMENTS",
    "setSelectable",
    "userSelect",
    "setStyle",
    "isNativelyFocusable",
    "fadeIn",
    "duration",
    "col",
    "qxWeb",
    "isPlaying",
    "stop",
    "once",
    "show",
    "getAnimationHandles",
    "fadeOut",
    "hide",
    "_applyVisible",
    "toHashCode",
    "_parent",
    "_scheduleChildrenUpdate",
    "scrollChildIntoViewX",
    "direct",
    "thisEl",
    "childEl",
    "scrollChildIntoViewY",
    "scrollToX",
    "x",
    "lazy",
    "getScrollX",
    "scrollToY",
    "y",
    "getScrollY",
    "disableScrolling",
    "enableScrolling",
    "addListener",
    "__onScroll",
    "removeListener",
    "__inScroll",
    "e",
    "setText",
    "self",
    "Text",
    "remove",
    "add",
    "getText",
    "result",
    "getTextSelection",
    "el",
    "getTextSelectionLength",
    "getLength",
    "getTextSelectionStart",
    "getStart",
    "getTextSelectionEnd",
    "getEnd",
    "setTextSelection",
    "clearTextSelection",
    "clear",
    "__performAction",
    "actions",
    "focus",
    "activate",
    "capture",
    "containerCapture",
    "_applyStyle",
    "oldValue",
    "map",
    "removeStyle",
    "getStyle",
    "getAllStyles",
    "__breakClasses",
    "toLowerCase",
    "__combineClasses",
    "primaryClass",
    "getCssClass",
    "arr",
    "append",
    "values",
    "addClass",
    "nameLower",
    "removeClass",
    "removeAllClasses",
    "_applyCssClass",
    "getDimensions",
    "mode",
    "left",
    "top",
    "right",
    "bottom",
    "width",
    "height",
    "content",
    "loc",
    "Location",
    "Dimension",
    "getContentSize",
    "canBeSeen",
    "rect",
    "getBoundingClientRect",
    "setAttributes",
    "removeAttribute",
    "defer",
    "util",
    "DeferredCall",
    "destruct",
    "hash"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * High-performance, high-level DOM element creation and management.\n *\n * Includes support for HTML and style attributes. Elements also have\n * got a powerful children and visibility management.\n *\n * Processes DOM insertion and modification with advanced logic\n * to reduce the real transactions.\n *\n * From the view of the parent you can use the following children management\n * methods:\n * {@link #getChildren}, {@link #indexOf}, {@link #hasChild}, {@link #add},\n * {@link #addAt}, {@link #remove}, {@link #removeAt}, {@link #removeAll}\n *\n * Each child itself also has got some powerful methods to control its\n * position:\n * {@link #getParent}, {@link #free},\n * {@link #insertInto}, {@link #insertBefore}, {@link #insertAfter},\n * {@link #moveTo}, {@link #moveBefore}, {@link #moveAfter},\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.module.Animation)\n */\nqx.Class.define(\"qx.html.Element\",\n{\n  extend : qx.html.Node,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a new Element\n   *\n   * @param tagName {String?\"div\"} Tag name of the element to create\n   * @param styles {Map?null} optional map of CSS styles, where the key is the name\n   *    of the style and the value is the value to use.\n   * @param attributes {Map?null} optional map of element attributes, where the\n   *    key is the name of the attribute and the value is the value to use.\n   */\n  construct : function(tagName, styles, attributes)\n  {\n    this.base(arguments, tagName||\"div\");\n\n    this.__styleValues = styles || null;\n    this.__attribValues = attributes || null;\n    if (attributes) {\n      for (var key in attributes) {\n        if (!key) {\n          throw new Error(\"Invalid unnamed attribute in \" + this.classname);\n        }\n      }\n    }\n    this.initCssClass();\n    \n    this.registerProperty(\"innerHtml\",\n        null, \n        function(value) {\n          if (this._domNode) {\n            this._domNode.innerHTML = value;\n          }\n        },\n        function(writer, property, name) {\n          if (property.value) {\n            writer(property.value);\n          }\n        });\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      STATIC DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} If debugging should be enabled */\n    DEBUG : false,\n    \n    /** @type {Integer} number of roots */\n    _hasRoots: 0,\n    \n    /** @type {Element} the default root to use */\n    _defaultRoot: null,\n\n    /** @type {Map} Contains the modified {@link qx.html.Element}s. The key is the hash code. */\n    _modified : {},\n\n    /** @type {Map} Contains the {@link qx.html.Element}s which should get hidden or visible at the next flush. The key is the hash code. */\n    _visibility : {},\n\n    /** @type {Map} Contains the {@link qx.html.Element}s which should scrolled at the next flush */\n    _scroll : {},\n\n    /** @type {Array} List of post actions for elements. The key is the action name. The value the {@link qx.html.Element}. */\n    _actions : [],\n\n    /**  @type {Map} List of all selections. */\n    __selection : {},\n\n    __focusHandler : null,\n\n    __mouseCapture : null,\n\n    __SELF_CLOSING_TAGS: null,\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC ELEMENT FLUSH\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedule a deferred element queue flush. If the widget subsystem is used\n     * this method gets overwritten by {@link qx.ui.core.queue.Manager}.\n     *\n     * @param job {String} The job descriptor. Should always be <code>\"element\"</code>.\n     */\n    _scheduleFlush : function(job) {\n      qx.html.Element.__deferredCall.schedule();\n    },\n\n\n    /**\n     * Flush the global modified list\n     */\n    flush : function()\n    {\n      var obj;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (this.DEBUG) {\n          qx.log.Logger.debug(this, \"Flushing elements...\");\n        }\n      }\n\n\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        // blur elements, which will be removed\n        var focusHandler = this.__getFocusHandler();\n        var focusedDomElement = focusHandler.getFocus();\n        if (focusedDomElement && this.__willBecomeInvisible(focusedDomElement)) {\n          focusHandler.blur(focusedDomElement);\n        }\n  \n        // deactivate elements, which will be removed\n        var activeDomElement = focusHandler.getActive();\n        if (activeDomElement && this.__willBecomeInvisible(activeDomElement)) {\n          qx.bom.Element.deactivate(activeDomElement);\n        }\n  \n        // release capture for elements, which will be removed\n        var captureDomElement = this.__getCaptureElement();\n        if (captureDomElement && this.__willBecomeInvisible(captureDomElement)) {\n          qx.bom.Element.releaseCapture(captureDomElement);\n        }\n      }\n\n\n      var later = [];\n      var modified = this._modified;\n\n      for (var hc in modified)\n      {\n        obj = modified[hc];\n        // Ignore all hidden elements except iframes\n        // but keep them until they get visible (again)\n        if (obj._willBeSeeable() || obj.classname == \"qx.html.Iframe\")\n        {\n          // Separately queue rendered elements\n          if (obj._domNode && qx.dom.Hierarchy.isRendered(obj._domNode)) {\n            later.push(obj);\n          }\n\n          // Flush invisible elements first\n          else\n          {\n            if (qx.core.Environment.get(\"qx.debug\"))\n            {\n              if (this.DEBUG) {\n                obj.debug(\"Flush invisible element\");\n              }\n            }\n\n            obj.flush();\n          }\n\n          // Cleanup modification list\n          delete modified[hc];\n        }\n      }\n\n      for (var i=0, l=later.length; i<l; i++)\n      {\n        obj = later[i];\n\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (this.DEBUG) {\n            obj.debug(\"Flush rendered element\");\n          }\n        }\n\n        obj.flush();\n      }\n\n\n\n      // Process visibility list\n      var visibility = this._visibility;\n\n      for (var hc in visibility)\n      {\n        obj = visibility[hc];\n\n        var element = obj._domNode;\n        if (!element)\n        {\n          delete visibility[hc];\n          continue;\n        }\n\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (this.DEBUG) {\n            qx.log.Logger.debug(this, \"Switching visibility to: \" + obj.isVisible());\n          }\n        }\n\n        // hiding or showing an object and deleting it right after that may\n        // cause an disposed object in the visibility queue [BUG #3607]\n        if (!obj.$$disposed) {\n          element.style.display = obj.isVisible() ? \"\" : \"none\";\n          // also hide the element (fixed some rendering problem in IE<8 & IE8 quirks)\n          if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n          {\n            if (!(document.documentMode >= 8)) {\n              element.style.visibility = obj.isVisible() ? \"visible\" : \"hidden\";\n            }\n          }\n        }\n\n        delete visibility[hc];\n      }\n\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        // Process scroll list\n        var scroll = this._scroll;\n        for (var hc in scroll)\n        {\n          obj = scroll[hc];\n          var elem = obj._domNode;\n  \n          if (elem && elem.offsetWidth)\n          {\n            var done = true;\n  \n            // ScrollToX\n            if (obj.__lazyScrollX != null)\n            {\n              obj._domNode.scrollLeft = obj.__lazyScrollX;\n              delete obj.__lazyScrollX;\n            }\n  \n            // ScrollToY\n            if (obj.__lazyScrollY != null)\n            {\n              obj._domNode.scrollTop = obj.__lazyScrollY;\n              delete obj.__lazyScrollY;\n            }\n  \n            // ScrollIntoViewX\n            var intoViewX = obj.__lazyScrollIntoViewX;\n            if (intoViewX != null)\n            {\n              var child = intoViewX.element.getDomElement();\n  \n              if (child && child.offsetWidth)\n              {\n                qx.bom.element.Scroll.intoViewX(child, elem, intoViewX.align);\n                delete obj.__lazyScrollIntoViewX;\n              }\n              else\n              {\n                done = false;\n              }\n            }\n  \n            // ScrollIntoViewY\n            var intoViewY = obj.__lazyScrollIntoViewY;\n            if (intoViewY != null)\n            {\n              var child = intoViewY.element.getDomElement();\n  \n              if (child && child.offsetWidth)\n              {\n                qx.bom.element.Scroll.intoViewY(child, elem, intoViewY.align);\n                delete obj.__lazyScrollIntoViewY;\n              }\n              else\n              {\n                done = false;\n              }\n            }\n  \n            // Clear flag if all things are done\n            // Otherwise wait for the next flush\n            if (done) {\n              delete scroll[hc];\n            }\n          }\n        }\n  \n  \n        var activityEndActions = {\n          \"releaseCapture\": 1,\n          \"blur\": 1,\n          \"deactivate\": 1\n        };\n  \n        // Process action list\n        for (var i=0; i<this._actions.length; i++)\n        {\n          var action = this._actions[i];\n          var element = action.element._domNode;\n          if (!element || !activityEndActions[action.type] && !action.element._willBeSeeable()) {\n            continue;\n          }\n          var args = action.args;\n          args.unshift(element);\n          qx.bom.Element[action.type].apply(qx.bom.Element, args);\n        }\n        this._actions = [];\n      }\n\n      // Process selection\n      for (var hc in this.__selection)\n      {\n        var selection = this.__selection[hc];\n        var elem = selection.element._domNode;\n        if (elem)\n        {\n          qx.bom.Selection.set(elem, selection.start, selection.end);\n          delete this.__selection[hc];\n        }\n      }\n\n      // Fire appear/disappear events\n      qx.event.handler.Appear.refresh();\n    },\n\n\n    /**\n     * Get the focus handler\n     *\n     * @return {qx.event.handler.Focus} The focus handler\n     */\n    __getFocusHandler : function()\n    {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        if (!this.__focusHandler)\n        {\n          var eventManager = qx.event.Registration.getManager(window);\n          this.__focusHandler = eventManager.getHandler(qx.event.handler.Focus);\n        }\n        return this.__focusHandler;\n      } else {\n        throw new Error(\"Unexpected use of qx.html.Element.__getFocusHandler in headless environment\");\n      }\n    },\n\n\n    /**\n     * Get the mouse capture element\n     *\n     * @return {Element} The mouse capture DOM element\n     */\n    __getCaptureElement : function()\n    {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        if (!this.__mouseCapture)\n        {\n          var eventManager = qx.event.Registration.getManager(window);\n          this.__mouseCapture = eventManager.getDispatcher(qx.event.dispatch.MouseCapture);\n        }\n        return this.__mouseCapture.getCaptureElement();\n      } else {\n        throw new Error(\"Unexpected use of qx.html.Element.__getCaptureElement in headless environment\");\n      }\n    },\n\n\n    /**\n     * Whether the given DOM element will become invisible after the flush\n     *\n     * @param domElement {Element} The DOM element to check\n     * @return {Boolean} Whether the element will become invisible\n     */\n    __willBecomeInvisible : function(domElement)\n    {\n      var element = this.fromDomElement(domElement);\n      return element && !element._willBeSeeable();\n    },\n\n\n    /**\n     * Finds the Widget for a given DOM element\n     *\n     * @param domElement {DOM} the DOM element\n     * @return {qx.ui.core.Widget} the Widget that created the DOM element\n     * @deprecated {6.1} see qx.html.Node.fromDomNode\n     */\n    fromDomElement: function(domElement) {\n      return qx.html.Node.fromDomNode(domElement);\n    },\n    \n    /**\n     * Sets the default Root element\n     * \n     * @param root {Element} the new default root\n     */\n    setDefaultRoot: function(root) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (this._defaultRoot && root) {\n          qx.log.Logger.warn(qx.html.Element, \"Changing default root, from \" + this._defaultRoot + \" to \" + root);\n        }\n      }\n      this._defaultRoot = root;\n    },\n\n    /**\n     * Returns the default root\n     * \n     * @return {Element} the default root\n     */\n    getDefaultRoot: function() {\n      return this._defaultRoot;\n    }\n\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties : {\n    /** \n     * @type{String} The primary CSS class for this element\n     * \n     * The implementation will add and remove this class from the list of classes, \n     * this property is provided as a means to easily set the primary class.  Because \n     * SCSS supports inheritance, it's more useful to be able to allow the SCSS \n     * definition to control the inheritance hierarchy of classes.  \n     * \n     * For example, a dialog could be implemented in code as a Dialog class derived from\n     * a Window class, but the presentation may be so different that the theme author\n     * would choose to not use inheritance at all.\n     */\n    cssClass: {\n      init: null,\n      nullable: true,\n      check: \"String\",\n      apply: \"_applyCssClass\"\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED HELPERS/DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} Marker for always visible root nodes (often the body node) */\n    __root : false,\n\n    __lazyScrollIntoViewX : null,\n    __lazyScrollIntoViewY : null,\n\n    __lazyScrollX : null,\n    __lazyScrollY : null,\n\n    __styleJobs : null,\n    __attribJobs : null,\n\n    __styleValues : null,\n    __attribValues : null,\n\n    /*\n     * @Override\n     */\n    _createDomElement : function() {\n      return qx.dom.Element.create(this._nodeName);\n    },\n\n    /*\n     * @Override\n     */\n    serialize(writer) {\n      if (this.__childrenHaveChanged) {\n        this.importQxObjectIds();\n        this.__childrenHaveChanged = false;\n      }\n      return this.base(arguments, writer);\n    },\n\n    /*\n     * @Override\n     */\n    _serializeImpl: function(writer) {\n      writer(\"<\", this._nodeName);\n      \n      // Copy attributes\n      var data = this.__attribValues;\n      if (data) {\n        var Attribute = qx.bom.element.Attribute;\n        for (var key in data) {\n          writer(\" \");\n          Attribute.serialize(writer, key, data[key]);\n        }\n      }\n\n      // Copy styles\n      var data = this.__styleValues||{};\n      if (!this.isVisible()) {\n        data = qx.lang.Object.clone(data);\n        data.display = \"none\";\n      }\n      if (Object.keys(data).length) {\n        var Style = qx.bom.element.Style;\n        var css = Style.compile(data);\n        if (css) {\n          writer(\" style=\\\"\", css, \"\\\"\");\n        }\n      }\n\n      // Copy properties\n      var data = this._properties;\n      if (data) {\n        for (var key in this._properties) {\n          let property = this._properties[key];\n          if (property.serialize) {\n            writer(\" \");\n            property.serialize.call(this, writer, key, property);\n          } else if (property.value !== undefined && property.value !== null) {\n            writer(\" \");\n            let value = JSON.stringify(property.value);\n            writer(key, \"=\", value);\n          }\n        }\n      }\n      \n      // Children\n      if (!this._children || !this._children.length) {\n        if (qx.html.Element.__SELF_CLOSING_TAGS[this._nodeName]) {\n          writer(\">\");\n        } else {\n          writer(\"></\", this._nodeName, \">\");\n        }\n      } else {\n        writer(\">\");\n        for (var i = 0; i < this._children.length; i++) {\n          this._children[i]._serializeImpl(writer);\n        }\n        writer(\"</\", this._nodeName, \">\");\n      }\n    },\n    \n    /**\n     * Connects a widget to this element, and to the DOM element in this Element.  They\n     * remain associated until disposed or disconnectWidget is called\n     *\n     * @param widget {qx.ui.core.Widget} the widget to associate\n     * @deprecated {6.1} see connectObject\n     */\n    connectWidget : function(widget) {\n      return this.connectObject(widget);\n    },\n\n    /**\n     * Disconnects a widget from this element and the DOM element.  The DOM element remains\n     * untouched, except that it can no longer be used to find the Widget.\n     *\n     * @param qxObject {qx.core.Object} the Widget\n     * @deprecated {6.1} see disconnectObject\n     */\n    disconnectWidget: function(widget) {\n      return this.disconnectObject(widget);\n    },\n\n    /*\n     * @Override\n     */\n    _addChildImpl(child) {\n      this.base(arguments, child);\n      this.__childrenHaveChanged = true;\n    },\n\n    /*\n     * @Override\n     */\n    _removeChildImpl(child) {\n      this.base(arguments, child);\n      this.__childrenHaveChanged = true;\n    },\n\n    /*\n     * @Override\n     */\n    getQxObject(id) {\n      if (this.__childrenHaveChanged) {\n        this.importQxObjectIds();\n        this.__childrenHaveChanged = false;\n      }\n      return this.base(arguments, id);\n    },\n\n    /**\n     * When a tree of virtual dom is loaded via JSX code, the paths in the `data-qx-object-id` \n     * attribute are relative to the JSX, and these attribuite values need to be loaded into the\n     * `qxObjectId` property - while resolving the parent parts of the path.\n     * \n     * EG\n     *  <div data-qx-object-id=\"root\">\n     *    <div>\n     *      <div data-qx-object-id=\"root/child\">\n     * \n     * The root DIV has to take on the qxObjectId of \"root\", and the third DIV has to have the \n     * ID \"child\" and be owned by the first DIV.\n     * \n     * This function imports and resolves those IDs\n     */\n    importQxObjectIds() {\n      let thisId = this.getQxObjectId();\n      let thisAttributeId = this.getAttribute(\"data-qx-object-id\");\n      if (thisId) {\n        this.setAttribute(\"data-qx-object-id\", thisId, true);\n      } else if (thisAttributeId) {\n        this.setQxObjectId(thisAttributeId);\n      }\n\n      const resolveImpl = node => {\n        if (!(node instanceof qx.html.Element)) {\n          return;\n        }\n        let id = node.getQxObjectId();\n        let attributeId = node.getAttribute(\"data-qx-object-id\");\n        if (id) {\n          if (attributeId && !attributeId.endsWith(id)) {\n            this.warn(`Attribute ID ${attributeId} is not compatible with the qxObjectId ${id}; the qxObjectId will take prescedence`);\n          }\n          node.setAttribute(\"data-qx-object-id\", id, true);\n\n        } else if (attributeId) {\n          let segs = attributeId ? attributeId.split('/') : [];\n\n          // Only one segment is easy, add directly to the parent\n          if (segs.length == 1) {\n            let parentNode = this;\n            parentNode.addOwnedQxObject(node, attributeId);\n\n          // Lots of segments\n          } else if (segs.length > 1) {\n            let parentNode = null;\n\n            // If the first segment is the outer parent\n            if (segs[0] == thisAttributeId || segs[0] == thisId) {\n              // Only two segments, means that the parent is the outer and the last segment \n              //  is the ID of the node being examined\n              if (segs.length == 2) {\n                parentNode = this;\n\n              // Otherwise resolve it further\n              } else {\n                // Extract the segments, exclude the first and last, and that leaves us with a relative ID path\n                let subId = qx.lang.Array.clone(segs);\n                subId.shift();\n                subId.pop();\n                subId = subId.join(\"/\");\n                parentNode = this.getQxObject(subId);\n              }\n\n            // Not the outer node, then resolve as a global.\n            } else {\n              parentNode = qx.core.Id.getQxObject(attributeId);\n            }\n              \n            if (!parentNode) {\n              throw new Error(`Cannot resolve object id ancestors, id=${attributeId}`);\n            }\n\n            parentNode.addOwnedQxObject(node, segs[segs.length - 1]);\n          }\n        }\n\n        let children = node.getChildren();\n        if (children) {\n          children.forEach(resolveImpl);\n        }\n      };\n\n      let children = this.getChildren();\n      if (children) {\n        children.forEach(resolveImpl);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SUPPORT FOR ATTRIBUTE/STYLE/EVENT FLUSH\n    ---------------------------------------------------------------------------\n    */\n    \n    /**\n     * Copies data between the internal representation and the DOM. This\n     * simply copies all the data and only works well directly after\n     * element creation. After this the data must be synced using {@link #_syncData}\n     *\n     * @param fromMarkup {Boolean} Whether the copy should respect styles\n     *   given from markup\n     */\n    _copyData : function(fromMarkup, propertiesFromDom)\n    {\n      this.base(arguments, fromMarkup, propertiesFromDom);\n      var elem = this._domNode;\n      \n      // Copy attributes\n      var data = this.__attribValues;\n      if (data) {\n        var Attribute = qx.bom.element.Attribute;\n        if (fromMarkup) {\n          var str;\n          let classes = {};\n          str = this.getAttribute(\"class\");\n          (str ? str.split(\" \") : []).forEach(name => {\n            if (name.startsWith(\"qx-\")) {\n              classes[name] = true\n            }\n          });\n\n          str = Attribute.get(elem, \"class\");\n          if (!qx.core.Environment.get(\"qx.headless\")) {\n            if (str instanceof window.SVGAnimatedString) {\n              str = str.baseVal;\n            }\n          }\n          (str ? str.split(\" \") : []).forEach(name => classes[name] = true);\n          classes = Object.keys(classes);\n\n          var segs = classes;\n          if (segs.length) {\n            this.setCssClass(segs[0]);\n            this.setAttribute(\"class\", classes.join(\" \"));\n          } else {\n            this.setCssClass(null);\n            this.setAttribute(\"class\", null);\n          }\n        }\n        for (var key in data) {\n          Attribute.set(elem, key, data[key]);\n        }\n      }\n\n      // Copy styles\n      var data = this.__styleValues;\n      if (data) {\n        var Style = qx.bom.element.Style;\n        \n        if (fromMarkup) {\n          Style.setStyles(elem, data);\n          \n        } else {\n          // Set styles at once which is a lot faster in most browsers\n          // compared to separate modifications of many single style properties.\n          Style.setCss(elem, Style.compile(data));\n        }\n      }\n      \n      // Copy visibility\n      if (!fromMarkup) {\n        var display = elem.style.display || \"\";\n        if (display == \"\" && !this.isVisible()) {\n          elem.style.display = \"none\";\n        } else if (display == \"none\" && this.isVisible()) {\n          elem.style.display = \"\";\n        }\n      } else {\n        var display = elem.style.display || \"\";\n        this.setVisible(display != \"none\");\n      }\n        \n    },\n\n\n    /**\n     * Synchronizes data between the internal representation and the DOM. This\n     * is the counterpart of {@link #_copyData} and is used for further updates\n     * after the element has been created.\n     *\n     */\n    _syncData : function()\n    {\n      this.base(arguments);\n      var elem = this._domNode;\n\n      var Attribute = qx.bom.element.Attribute;\n      var Style = qx.bom.element.Style;\n\n      // Sync attributes\n      var jobs = this.__attribJobs;\n      if (jobs)\n      {\n        var data = this.__attribValues;\n        if (data)\n        {\n          var value;\n          for (var key in jobs)\n          {\n            value = data[key];\n\n            if (value !== undefined) {\n              Attribute.set(elem, key, value);\n            } else {\n              Attribute.reset(elem, key);\n            }\n          }\n        }\n\n        this.__attribJobs = null;\n      }\n\n      // Sync styles\n      var jobs = this.__styleJobs;\n      if (jobs)\n      {\n        var data = this.__styleValues;\n        if (data)\n        {\n          var styles = {};\n          for (var key in jobs) {\n            styles[key] = data[key];\n          }\n\n          Style.setStyles(elem, styles);\n        }\n\n        this.__styleJobs = null;\n      }\n    },\n    \n\n    \n\n    /*\n    ---------------------------------------------------------------------------\n      DOM ELEMENT ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the element's root flag, which indicates\n     * whether the element should be a root element or not.\n     * @param root {Boolean} The root flag.\n     */\n    setRoot : function(root) {\n      if (root && !this.__root) {\n        qx.html.Element._hasRoots++;\n      } else if (!root && this.__root) {\n        qx.html.Element._hasRoots--;\n      }\n      this.__root = root;\n    },\n    \n    /*\n     * @Override\n     */\n    isRoot : function() {\n      return this.__root;\n    },\n\n    /**\n     * Uses existing markup for this element. This is mainly used\n     * to insert pre-built markup blocks into the element hierarchy.\n     *\n     * @param html {String} HTML markup with one root element\n     *   which is used as the main element for this instance.\n     * @return {Element} The created DOM element\n     */\n    useMarkup : function(html)\n    {\n      if (this._domNode) {\n        throw new Error(\"Could not overwrite existing element!\");\n      }\n\n      // Prepare extraction\n      // We have a IE specific issue with \"Unknown error\" messages\n      // when we try to use the same DOM node again. I am not sure\n      // why this happens. Would be a good performance improvement,\n      // but does not seem to work.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        var helper = document.createElement(\"div\");\n      } else {\n        var helper = qx.dom.Element.getHelperElement();\n      }\n\n      // Extract first element\n      helper.innerHTML = html;\n      this.useElement(helper.firstChild);\n\n      return this._domNode;\n    },\n\n\n    /**\n     * Uses an existing element instead of creating one. This may be interesting\n     * when the DOM element is directly needed to add content etc.\n     *\n     * @param elem {Element} Element to reuse\n     * @deprecated {6.1} see useNode\n     */\n    useElement : function(elem)\n    {\n      this.useNode(elem);\n    },\n\n\n    /**\n     * Whether the element is focusable (or will be when created)\n     *\n     * @return {Boolean} <code>true</code> when the element is focusable.\n     */\n    isFocusable : function()\n    {\n      var tabIndex = this.getAttribute(\"tabIndex\");\n      if (tabIndex >= 1) {\n        return true;\n      }\n\n      var focusable = qx.event.handler.Focus.FOCUSABLE_ELEMENTS;\n      if (tabIndex >= 0 && focusable[this._nodeName]) {\n        return true;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Set whether the element is selectable. It uses the qooxdoo attribute\n     * qxSelectable with the values 'on' or 'off'.\n     * In webkit, a special css property will be used (-webkit-user-select).\n     *\n     * @param value {Boolean} True, if the element should be selectable.\n     */\n    setSelectable : function(value)\n    {\n      this.setAttribute(\"qxSelectable\", value ? \"on\" : \"off\");\n      var userSelect = qx.core.Environment.get(\"css.userselect\");\n      if (userSelect) {\n        this.setStyle(userSelect, value ? \"text\" :\n          qx.core.Environment.get(\"css.userselect.none\"));\n      }\n    },\n\n\n    /**\n     * Whether the element is natively focusable (or will be when created)\n     *\n     * This ignores the configured tabIndex.\n     *\n     * @return {Boolean} <code>true</code> when the element is focusable.\n     */\n    isNativelyFocusable : function() {\n      return !!qx.event.handler.Focus.FOCUSABLE_ELEMENTS[this._nodeName];\n    },\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Fades in the element.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeIn : function(duration) {\n      var col = qxWeb(this._domNode);\n      if (col.isPlaying()) {\n        col.stop();\n      }\n      // create the element right away\n      if (!this._domNode) {\n        this.flush();\n        col.push(this._domNode);\n      }\n      if (this._domNode) {\n        col.fadeIn(duration).once(\"animationEnd\", function() {\n          this.show();\n          qx.html.Element.flush();\n        }, this);\n        return col.getAnimationHandles()[0];\n      }\n    },\n\n\n    /**\n     * Fades out the element.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeOut : function(duration) {\n      var col = qxWeb(this._domNode);\n      if (col.isPlaying()) {\n        col.stop();\n      }\n\n      if (this._domNode) {\n        col.fadeOut(duration).once(\"animationEnd\", function() {\n          this.hide();\n          qx.html.Element.flush();\n        }, this);\n        return col.getAnimationHandles()[0];\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      VISIBILITY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /*\n     * @Override\n     */\n    _applyVisible: function(value) {\n      if (value) {\n        if (this._domNode) {\n          qx.html.Element._visibility[this.toHashCode()] = this;\n          qx.html.Element._scheduleFlush(\"element\");\n        }\n\n        // Must be sure that the element gets included into the DOM.\n        if (this._parent) {\n          this._parent._scheduleChildrenUpdate();\n        }\n        \n      } else {\n        if (this._domNode) {\n          qx.html.Element._visibility[this.toHashCode()] = this;\n          qx.html.Element._scheduleFlush(\"element\");\n        }\n      }\n    },\n\n    /**\n     * Marks the element as visible which means that a previously applied\n     * CSS style of display=none gets removed and the element will inserted\n     * into the DOM, when this had not already happened before.\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    show : function() {\n      this.setVisible(true);\n      return this;\n    },\n\n\n    /**\n     * Marks the element as hidden which means it will kept in DOM (if it\n     * is already there, but configured hidden using a CSS style of display=none).\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    hide : function() {\n      this.setVisible(false);\n      return this;\n    },\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls the given child element into view. Only scrolls children.\n     * Do not influence elements on top of this element.\n     *\n     * If the element is currently invisible it gets scrolled automatically\n     * at the next time it is visible again (queued).\n     *\n     * @param elem {qx.html.Element} The element to scroll into the viewport.\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewX : function(elem, align, direct)\n    {\n      var thisEl = this._domNode;\n      var childEl = elem.getDomElement();\n\n      if (direct !== false && thisEl && thisEl.offsetWidth && childEl && childEl.offsetWidth)\n      {\n        qx.bom.element.Scroll.intoViewX(childEl, thisEl, align);\n      }\n      else\n      {\n        this.__lazyScrollIntoViewX =\n        {\n          element : elem,\n          align : align\n        };\n\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollX;\n    },\n\n\n    /**\n     * Scrolls the given child element into view. Only scrolls children.\n     * Do not influence elements on top of this element.\n     *\n     * If the element is currently invisible it gets scrolled automatically\n     * at the next time it is visible again (queued).\n     *\n     * @param elem {qx.html.Element} The element to scroll into the viewport.\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewY : function(elem, align, direct)\n    {\n      var thisEl = this._domNode;\n      var childEl = elem.getDomElement();\n\n      if (direct !== false && thisEl && thisEl.offsetWidth && childEl && childEl.offsetWidth)\n      {\n        qx.bom.element.Scroll.intoViewY(childEl, thisEl, align);\n      }\n      else\n      {\n        this.__lazyScrollIntoViewY =\n        {\n          element : elem,\n          align : align\n        };\n\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollY;\n    },\n\n\n    /**\n     * Scrolls the element to the given left position.\n     *\n     * @param x {Integer} Horizontal scroll position\n     * @param lazy {Boolean?false} Whether the scrolling should be performed\n     *    during element flush.\n     */\n    scrollToX : function(x, lazy)\n    {\n      var thisEl = this._domNode;\n      if (lazy !== true && thisEl && thisEl.offsetWidth)\n      {\n        thisEl.scrollLeft = x;\n        delete this.__lazyScrollX;\n      }\n      else\n      {\n        this.__lazyScrollX = x;\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollIntoViewX;\n    },\n\n\n    /**\n     * Get the horizontal scroll position.\n     *\n     * @return {Integer} Horizontal scroll position\n     */\n    getScrollX : function()\n    {\n      var thisEl = this._domNode;\n      if (thisEl) {\n        return thisEl.scrollLeft;\n      }\n\n      return this.__lazyScrollX || 0;\n    },\n\n\n    /**\n     * Scrolls the element to the given top position.\n     *\n     * @param y {Integer} Vertical scroll position\n     * @param lazy {Boolean?false} Whether the scrolling should be performed\n     *    during element flush.\n     */\n    scrollToY : function(y, lazy)\n    {\n      var thisEl = this._domNode;\n      if (lazy !== true && thisEl && thisEl.offsetWidth)\n      {\n        thisEl.scrollTop = y;\n        delete this.__lazyScrollY;\n      }\n      else\n      {\n        this.__lazyScrollY = y;\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollIntoViewY;\n    },\n\n\n    /**\n     * Get the vertical scroll position.\n     *\n     * @return {Integer} Vertical scroll position\n     */\n    getScrollY : function()\n    {\n      var thisEl = this._domNode;\n      if (thisEl) {\n        return thisEl.scrollTop;\n      }\n\n      return this.__lazyScrollY || 0;\n    },\n\n\n    /**\n     * Disables browser-native scrolling\n     */\n    disableScrolling : function()\n    {\n      this.enableScrolling();\n      this.scrollToX(0);\n      this.scrollToY(0);\n      this.addListener(\"scroll\", this.__onScroll, this);\n    },\n\n\n    /**\n     * Re-enables browser-native scrolling\n     */\n    enableScrolling : function() {\n      this.removeListener(\"scroll\", this.__onScroll, this);\n    },\n\n\n    __inScroll : null,\n\n    /**\n     * Handler for the scroll-event\n     *\n     * @param e {qx.event.type.Native} scroll-event\n     */\n    __onScroll : function(e)\n    {\n      if (!this.__inScroll)\n      {\n        this.__inScroll = true;\n        this._domNode.scrollTop = 0;\n        this._domNode.scrollLeft = 0;\n        delete this.__inScroll;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    \n    /*\n     * Sets the text value of this element; it will delete children first, except\n     * for the first node which (if it is a Text node) will have it's value updated\n     * \n     * @param value {String} the text to set\n     */\n    setText: function(value) {\n      var self = this;\n      var children = this._children ? qx.lang.Array.clone(this._children) : [];\n      if (children[0] instanceof qx.html.Text) {\n        children[0].setText(value);\n        children.shift();\n        children.forEach(function(child) {\n          self.remove(child);\n        });\n      } else {\n        children.forEach(function(child) {\n          self.remove(child);\n        });\n        this.add(new qx.html.Text(value));\n      }\n    },\n\n    /**\n     * Returns the text value, accumulated from all child nodes\n     * \n     * @return {String} the text value\n     */\n    getText: function() {\n      var result = [];\n      if (this._children) {\n        this._children.forEach(function(child) {\n          result.push(child.getText());\n        });\n      }\n      return result.join(\"\");\n    },\n\n\n    /**\n     * Get the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {String|null}\n     */\n    getTextSelection : function()\n    {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.get(el);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the length of selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength : function()\n    {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getLength(el);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the start of the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionStart : function()\n    {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getStart(el);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the end of the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionEnd : function()\n    {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getEnd(el);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Set the selection of the element with the given start and end value.\n     * If no end value is passed the selection will extend to the end.\n     *\n     * This method only works if the underlying DOM element is already created.\n     *\n     * @param start {Integer} start of the selection (zero based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection : function(start, end)\n    {\n      var el = this._domNode;\n      if (el) {\n        qx.bom.Selection.set(el, start, end);\n        return;\n      }\n\n      // if element not created, save the selection for flushing\n      qx.html.Element.__selection[this.toHashCode()] = {\n        element : this,\n        start : start,\n        end : end\n      };\n      qx.html.Element._scheduleFlush(\"element\");\n    },\n\n\n    /**\n     * Clears the selection of the element.\n     *\n     * This method only works if the underlying DOM element is already created.\n     *\n     */\n    clearTextSelection : function()\n    {\n      var el = this._domNode;\n      if (el) {\n        qx.bom.Selection.clear(el);\n      }\n      delete qx.html.Element.__selection[this.toHashCode()];\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS/ACTIVATE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Takes the action to process as argument and queues this action if the\n     * underlying DOM element is not yet created.\n     * \n     * Note that \"actions\" are functions in `qx.bom.Element` and only apply to\n     * environments with a user interface.  This will throw an error if the user \n     * interface is headless\n     *\n     * @param action {String} action to queue\n     * @param args {Array} optional list of arguments for the action\n     */\n    __performAction : function(action, args)\n    {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        var actions = qx.html.Element._actions;\n  \n        actions.push({\n          type: action,\n          element: this,\n          args: args || []\n        });\n        qx.html.Element._scheduleFlush(\"element\");\n      } else {\n        throw new Error(\"Unexpected use of qx.html.Element.__performAction in headles environment\");\n      }\n    },\n\n\n    /**\n     * Focus this element.\n     *\n     * If the underlaying DOM element is not yet created, the\n     * focus is queued for processing after the element creation.\n     *\n     * Silently does nothing when in a headless environment \n     */\n    focus : function() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"focus\");\n      }\n    },\n\n\n    /**\n     * Mark this element to get blurred on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment \n     *\n     */\n    blur : function() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"blur\");\n      }\n    },\n\n\n    /**\n     * Mark this element to get activated on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment \n     *\n     */\n    activate : function() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"activate\");\n      }\n    },\n\n\n    /**\n     * Mark this element to get deactivated on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment \n     *\n     */\n    deactivate : function() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"deactivate\");\n      }\n    },\n\n\n    /**\n     * Captures all mouse events to this element\n     *\n     * Silently does nothing when in a headless environment \n     *\n     * @param containerCapture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture : function(containerCapture) {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"capture\", [containerCapture !== false]);\n      }\n    },\n\n\n    /**\n     * Releases this element from a previous {@link #capture} call\n     *\n     * Silently does nothing when in a headless environment \n     */\n    releaseCapture : function() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"releaseCapture\");\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set up the given style attribute\n     *\n     * @param key {String} the name of the style attribute\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setStyle : function(key, value, direct)\n    {\n      if (!this.__styleValues) {\n        this.__styleValues = {};\n      }\n\n      if (this.__styleValues[key] == value) {\n        return this;\n      }\n\n      this._applyStyle(key, value, this.__styleValues[key]);\n      if (value == null) {\n        delete this.__styleValues[key];\n      } else {\n        this.__styleValues[key] = value;\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this._domNode)\n      {\n        // Omit queuing in direct mode\n        if (direct)\n        {\n          qx.bom.element.Style.set(this._domNode, key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__styleJobs) {\n          this.__styleJobs = {};\n        }\n\n        // Store job info\n        this.__styleJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n    \n    \n    /**\n     * Called by setStyle when a value of a style changes; this is intended to be\n     * overridden to allow the element to update properties etc according to the\n     * style\n     * \n     * @param key {String} the style value\n     * @param value {String?} the value to set\n     * @param oldValue {String?} The previous value (not from DOM)\n     */\n    _applyStyle: function(key, value, oldValue) {\n      // Nothing\n    },\n\n\n    /**\n     * Convenience method to modify a set of styles at once.\n     *\n     * @param map {Map} a map where the key is the name of the property\n     *    and the value is the value to use.\n     * @param direct {Boolean?false} Whether the values should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setStyles : function(map, direct)\n    {\n      // inline calls to \"set\" because this method is very\n      // performance critical!\n\n      var Style = qx.bom.element.Style;\n\n      if (!this.__styleValues) {\n        this.__styleValues = {};\n      }\n\n      if (this._domNode)\n      {\n        // Dynamically create if needed\n        if (!this.__styleJobs) {\n          this.__styleJobs = {};\n        }\n\n        for (var key in map)\n        {\n          var value = map[key];\n          if (this.__styleValues[key] == value) {\n            continue;\n          }\n\n          this._applyStyle(key, value, this.__styleValues[key]);\n          if (value == null) {\n            delete this.__styleValues[key];\n          } else {\n            this.__styleValues[key] = value;\n          }\n\n          // Omit queuing in direct mode\n          if (direct)\n          {\n            Style.set(this._domNode, key, value);\n            continue;\n          }\n\n          // Store job info\n          this.__styleJobs[key] = true;\n        }\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n      else\n      {\n        for (var key in map)\n        {\n          var value = map[key];\n          if (this.__styleValues[key] == value) {\n            continue;\n          }\n\n          this._applyStyle(key, value, this.__styleValues[key]);\n          if (value == null) {\n            delete this.__styleValues[key];\n          } else {\n            this.__styleValues[key] = value;\n          }\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Removes the given style attribute\n     *\n     * @param key {String} the name of the style attribute\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeStyle : function(key, direct) {\n      this.setStyle(key, null, direct);\n      return this;\n    },\n\n\n    /**\n     * Get the value of the given style attribute.\n     *\n     * @param key {String} name of the style attribute\n     * @return {var} the value of the style attribute\n     */\n    getStyle : function(key) {\n      return this.__styleValues ? this.__styleValues[key] : null;\n    },\n\n\n    /**\n     * Returns a map of all styles. Do not modify the result map!\n     *\n     * @return {Map} All styles or <code>null</code> when none are configured.\n     */\n    getAllStyles : function() {\n      return this.__styleValues || null;\n    },\n\n\n    \n\n    /*\n    ---------------------------------------------------------------------------\n      CSS CLASS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    __breakClasses: function() {\n      var map = {};\n      (this.getAttribute(\"class\")||\"\")\n        .split(\" \")\n        .forEach(function(name) {\n          if (name) {\n            map[name.toLowerCase()] = name;\n          }\n        });\n      return map;\n    },\n    \n    __combineClasses: function(map) {\n      var primaryClass = this.getCssClass();\n      var arr = [];\n      if (primaryClass) {\n        arr.push(primaryClass);\n        delete map[primaryClass.toLowerCase()];\n      }\n      qx.lang.Array.append(arr, Object.values(map));\n      return arr.length ? arr.join(\" \") : null;\n    },\n    \n    /**\n     * Adds a css class to the element.\n     * \n     * @param name {String} Name of the CSS class.\n     * @return {Element} this, for chaining\n     */\n    addClass : function(name) {\n      var classes = this.__breakClasses();\n      var primaryClass = (this.getCssClass()||\"\").toLowerCase();\n      name.split(\" \").forEach(name => {\n        var nameLower = name.toLowerCase();\n        if (nameLower == primaryClass) {\n          this.setCssClass(null);\n        }\n        \n        classes[nameLower] = name;\n      });\n      this.setAttribute(\"class\", this.__combineClasses(classes));\n      return this;\n    },\n\n\n    /**\n     * Removes a CSS class from the current element.\n     * \n     * @param name {String} Name of the CSS class.\n     * @return {Element} this, for chaining\n     */\n    removeClass : function(name) {\n      var classes = this.__breakClasses();\n      var primaryClass = (this.getCssClass()||\"\").toLowerCase();\n      name.split(\" \").forEach(name => {\n        var nameLower = name.toLowerCase();\n        if (nameLower == primaryClass) {\n          this.setCssClass(null);\n        }\n        \n        delete classes[nameLower];\n      });\n      \n      this.setAttribute(\"class\", this.__combineClasses(classes));\n      return this;\n    },\n\n\n    /**\n     * Removes all CSS classed from the current element.\n     */\n    removeAllClasses : function() {\n      this.setCssClass(null);\n      this.setAttribute(\"class\", \"\");\n    },\n    \n    \n    /**\n     * Apply method for cssClass\n     */\n    _applyCssClass: function(value, oldValue) {\n      var classes = this.__breakClasses();\n      if (oldValue) {\n        oldValue.split(\" \").forEach(name => delete classes[name.toLowerCase()]);\n      }\n      if (value) {\n        value.split(\" \").forEach(name => classes[name.toLowerCase()] = name);\n      }\n      this.setAttribute(\"class\", this.__combineClasses(classes));\n    },\n\n    \n    \n    \n    /*\n    ---------------------------------------------------------------------------\n      SIZE AND POSITION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the size and position of this element; this is just a helper method that wraps\n     * the calls to qx.bom.*\n     * \n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).\n     *\n     * @param mode {String} the type of size required, see above\n     * @return {Object} a map, containing:\n     *  left, right, top, bottom - document co-ords\n     *  content - Object, containing:\n     *    width, height: maximum permissible content size\n     */\n    getDimensions: function(mode) {\n      if (!this._domNode) {\n        return {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          width: 0,\n          height: 0,\n          content: {\n            width: 0,\n            height: 0\n          }\n        }\n      }\n      var loc = qx.bom.element.Location.get(this._domNode, mode);\n      loc.content = qx.bom.element.Dimension.getContentSize(this._domNode);\n      loc.width = loc.right - loc.left;\n      loc.height = loc.bottom - loc.top;\n      return loc;\n    },\n    \n    \n    /**\n     * Detects whether the DOM Node is visible\n     */\n    canBeSeen: function() {\n      if (this._domNode && this.isVisible()) {\n        var rect = this._domNode.getBoundingClientRect();\n        if (rect.top > 0 || rect.left > 0 || rect.width > 0 || rect.height > 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    \n    \n    \n    /*\n    ---------------------------------------------------------------------------\n      ATTRIBUTE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set up the given attribute\n     *\n     * @param key {String} the name of the attribute\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setAttribute : function(key, value, direct)\n    {\n      if (!this.__attribValues) {\n        this.__attribValues = {};\n      }\n\n      if (this.__attribValues[key] == value) {\n        return this;\n      }\n\n      if (value == null) {\n        delete this.__attribValues[key];\n      } else {\n        this.__attribValues[key] = value;\n      }\n\n      if (key == \"data-qx-object-id\") {\n        this.setQxObjectId(value);\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this._domNode)\n      {\n        // Omit queuing in direct mode\n        if (direct)\n        {\n          qx.bom.element.Attribute.set(this._domNode, key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__attribJobs) {\n          this.__attribJobs = {};\n        }\n\n        // Store job info\n        this.__attribJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Convenience method to modify a set of attributes at once.\n     *\n     * @param map {Map} a map where the key is the name of the property\n     *    and the value is the value to use.\n     * @param direct {Boolean?false} Whether the values should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setAttributes : function(map, direct)\n    {\n      for (var key in map) {\n        this.setAttribute(key, map[key], direct);\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Removes the given attribute\n     *\n     * @param key {String} the name of the attribute\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeAttribute : function(key, direct) {\n      return this.setAttribute(key, null, direct);\n    },\n\n\n    /**\n     * Get the value of the given attribute.\n     *\n     * @param key {String} name of the attribute\n     * @return {var} the value of the attribute\n     */\n    getAttribute : function(key) {\n      return this.__attribValues ? this.__attribValues[key] : null;\n    }\n  },\n\n\n\n\n\n  /*\n   *****************************************************************************\n      DEFER\n   *****************************************************************************\n   */\n\n   defer : function(statics) {\n     statics.__deferredCall = new qx.util.DeferredCall(statics.flush, statics);\n     statics.__SELF_CLOSING_TAGS = {};\n     [\"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"link\", \n     \"meta\", \"param\", \"source\", \"track\", \"wbr\"].forEach(function(tagName) {\n       statics.__SELF_CLOSING_TAGS[tagName] = true;\n     }); \n   },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    var hash = this.toHashCode();\n    if (hash) {\n      delete qx.html.Element._modified[hash];\n      delete qx.html.Element._scroll[hash];\n    }\n    this.setRoot(false);\n\n    this.__attribValues = this.__styleValues =\n      this.__attribJobs = this.__styleJobs =\n      this.__lazyScrollIntoViewX = this.__lazyScrollIntoViewY = null;\n  }\n});\n"
  ]
}